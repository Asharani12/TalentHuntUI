{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\Admin\\\\Candidate\\\\AddCandidate.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Box, Button, Card, CardHeader, Divider, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { getRolesRequest, getReportingManagersRequest, getCandidateByIdRequest, addCandidateByIdRequest, updateCandidateByIdRequest } from \"../../../services/Admin\";\nimport { PROJECT_PATHS, NumbersRegExp } from \"../../../shared/constants\";\nimport DashboardPage from \"../../Page/DashboardPage\";\nimport SessionContext from \"../../../context/SessionContext\";\nimport snackbarAlert from \"../../SnackbarAlert\";\nimport Spinner from \"../../Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  mainBox: {\n    maxWidth: 800,\n    margin: \"16px auto 0\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst AddCandidate = props => {\n  _s();\n\n  var _PROJECT_PATHS$Manage;\n\n  const classes = useStyles();\n  const loggedInUser = useContext(SessionContext).user;\n  const CandidateId = props.match.params.id;\n  const manageCandidatePath = (_PROJECT_PATHS$Manage = PROJECT_PATHS.Manager.find(x => x.pagename === \"viewcandidates\")) === null || _PROJECT_PATHS$Manage === void 0 ? void 0 : _PROJECT_PATHS$Manage.path;\n  const [loading, setLoading] = useState(true);\n  const [viewOnly, setViewOnly] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [reportingmanagers, setReportingManagers] = useState([]);\n  const [editableCandidate, setEditableCandidate] = useState(undefined);\n  const [initialValues, setInitialValues] = useState({\n    Name: \"\",\n    DOB: \"\",\n    Email: \"\",\n    Skills: \"\",\n    Contact: \"\",\n    Designation: \"\",\n    ModifiedBy: \"\",\n    Profile: \"\",\n    Experience: \"\",\n    Reason_For_Leaving: \"\",\n    Source: \"\",\n    Interview_Schedule: \"\",\n    Date_Of_Joining: \"\",\n    Hiring_Status: \"\",\n    Comment: \"\",\n    Notice_Period: \"\",\n    Ready_To_Relocate: \"\",\n    Communication: \"\",\n    Current_CTC: \"\",\n    Current_Location: \"\",\n    Expected_CTC: \"\",\n    College_Name: \"\",\n    _id: \"\",\n    Resume: \"\"\n  });\n\n  const getRoles = async () => {\n    try {\n      const response = await getRolesRequest();\n\n      if (response && response.Status.ResponseCode == 200) {\n        const drp_roles = response.Roles;\n        setRoles(drp_roles);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const getReportingManagers = async () => {\n    try {\n      const response = await getReportingManagersRequest();\n\n      if (response && response.Status.ResponseCode == 200) {\n        const drp_users = response.Users;\n        setReportingManagers(drp_users);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const getCandidateById = async CandidateId => {\n    try {\n      const response = await getCandidateByIdRequest(CandidateId);\n      console.log(\"respo\", response.data);\n\n      if (response) {\n        const Candidate = response.data;\n\n        if (Candidate) {\n          setEditableCandidate(Candidate);\n          setInitialValues({\n            Name: Candidate.Name,\n            DOB: Candidate.DOB,\n            Email: Candidate.Email,\n            Skills: Candidate.Skills,\n            Contact: Candidate.Contact,\n            Designation: Candidate.Designation,\n            Experience: Candidate.Experience,\n            Profile: Candidate.Profile,\n            Reason_For_Leaving: Candidate.Reason_For_Leaving,\n            Source: Candidate.Source,\n            Interview_Schedule: Candidate.Interview_Schedule,\n            Date_Of_Joining: Candidate.Date_Of_Joining,\n            Hiring_Status: Candidate.Hiring_Status,\n            Comment: Candidate.Comment,\n            Notice_Period: Candidate.Notice_Period,\n            Ready_To_Relocate: Candidate.Ready_To_Relocate,\n            Communication: Candidate.Communication,\n            Current_CTC: Candidate.Current_CTC,\n            Current_Location: Candidate.Current_Location,\n            Expected_CTC: Candidate.Expected_CTC,\n            College_Name: Candidate.College_Name,\n            ModifiedBy: loggedInUser._id,\n            _id: CandidateId,\n            Resume: \"\"\n          });\n          setLoading(false);\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke!\");\n        }\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"CandidateId\", CandidateId);\n\n    (async function execPreLoadFunctions() {\n      // await getRoles();\n      // await getReportingManagers();\n      if (CandidateId) {\n        await getCandidateById(CandidateId);\n        setViewOnly(false);\n      } else {\n        setLoading(false);\n        setViewOnly(false);\n      }\n    })();\n  }, []);\n\n  const handleSubmit = async (values, {\n    resetForm\n  }) => {\n    try {\n      console.log(\"handle called\");\n\n      if (CandidateId) {\n        const candidate = {\n          Name: values.Name,\n          DOB: values.DOB,\n          Email: values.Email,\n          Skills: values.Skills,\n          Contact: values.Contact,\n          Designation: values.Designation,\n          Experience: values.Experience,\n          Profile: values.Profile,\n          Reason_For_Leaving: values.Reason_For_Leaving,\n          Source: values.Source,\n          Interview_Schedule: values.Interview_Schedule,\n          Date_Of_Joining: values.Date_Of_Joining,\n          Hiring_Status: values.Hiring_Status,\n          Comment: values.Comment,\n          Notice_Period: values.Notice_Period,\n          Ready_To_Relocate: values.Ready_To_Relocate,\n          Communication: values.Communication,\n          Current_CTC: values.Current_CTC,\n          Current_Location: values.Current_Location,\n          Expected_CTC: values.Expected_CTC,\n          College_Name: values.College_Name,\n          ModifiedBy: loggedInUser._id,\n          Resume: \"\",\n          _id: CandidateId\n        };\n        console.log(\"candidate\", candidate);\n        const response = await updateCandidateByIdRequest(CandidateId, candidate);\n        console.log(\"response submit\", response.status);\n\n        if (response && response.status === true) {\n          props.history.push(manageCandidatePath);\n        } else if (response.status == 205) {\n          snackbarAlert.warning(\"Email or phone already exists! Please enter unique one.\");\n        } else {\n          console.log(\"response submit\", response.status);\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n        }\n      } else {\n        const candidate = {\n          Name: values.Name,\n          DOB: values.DOB,\n          Email: values.Email,\n          Skills: values.Skills,\n          Contact: values.Contact,\n          Designation: values.Designation,\n          Experience: values.Experience,\n          Profile: values.Profile,\n          Reason_For_Leaving: values.Reason_For_Leaving,\n          Source: values.Source,\n          Interview_Schedule: values.Interview_Schedule,\n          Date_Of_Joining: values.Date_Of_Joining,\n          Hiring_Status: values.Hiring_Status,\n          Comment: values.Comment,\n          Notice_Period: values.Notice_Period,\n          Ready_To_Relocate: values.Ready_To_Relocate,\n          Communication: values.Communication,\n          Current_CTC: values.Current_CTC,\n          Current_Location: values.Current_Location,\n          Expected_CTC: values.Expected_CTC,\n          College_Name: values.College_Name,\n          ModifiedBy: loggedInUser._id,\n          _id: \"\",\n          Resume: \"\"\n        };\n        console.log(\"candidate\", candidate);\n        const response = await addCandidateByIdRequest(candidate);\n\n        if (response && response.status === true) {\n          snackbarAlert.success(\"Candidate added successfully!\");\n          resetForm();\n        } else if (response.Status.ResponseCode == 205) {\n          snackbarAlert.warning(\"Email or phone already exists! Please enter unique one.\");\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n        }\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    Name: Yup.string().min(3, \"Name should be minimum 3 characters!\").max(100, \"Name should be maximum 100 characters!\").required(\"Name is required!\"),\n    Email: Yup.string().email(\"Must be a valid email!\").max(100, \"Email should be maximum 100 characters!\").required(\"Email is required!\"),\n    DOB: Yup.string().required(\"Date of Birth is required!\"),\n    Skills: Yup.string().required(\"Skills are required\"),\n    Contact: Yup.string().min(10, \"Phone number should be 10 digits!\").max(10, \"Phone number should be 10 digits!\").matches(NumbersRegExp, \"Must be a valid phone number!\").required(\"Phone number is required!\"),\n    Designation: Yup.string().min(5, \"designation should have minimum 5 charaters!\").max(100, \"designation should have maximum 100 charater!\").required(\"designation should required\"),\n    Experience: Yup.string().required(\"Experience is required\"),\n    Profile: Yup.string().required(\"Profile is required\"),\n    Reason_For_Leaving: Yup.string().required(\"Reason for leaving is required\"),\n    Source: Yup.string().required(\"Source is required\"),\n    Interview_Schedule: Yup.string().required(\"schedule for interview is required\"),\n    Date_Of_Joining: Yup.string().required(\"joining date is required\"),\n    Hiring_Status: Yup.string().required(\"hiring status is required\"),\n    Comment: Yup.string().required(\"comment is required\"),\n    Notice_Period: Yup.string().required(\"notice period is required\"),\n    Ready_To_Relocate: Yup.string().required(\"ready to relocate is required\"),\n    Communication: Yup.string().min(3, \"should be minimum 3 charaters\").max(100, \"communication should have maximun 100 charaters!\").required(\"communication is required\"),\n    Current_CTC: Yup.string().required(\"current CTC is required\"),\n    Current_Location: Yup.string().required(\"current location is required\"),\n    Expected_CTC: Yup.string().required(\"expected ctc is required\"),\n    College_Name: Yup.string().min(10, \"college name should be 10 charaters!\").max(100, \"college name should be 100 charaters!\").required(\"college name is required\"),\n    Resume: Yup.string().required(\"resume is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardPage, {\n    title: CandidateId ? \"Manage Candidates | Edit Candidate\" : \"Manage Candidates | Add Candidate\",\n    children: !loading ? /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.mainBox,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              subheader: CandidateId ? \"Please change the below details to update candidate.\" : \"Please fill the below details to add candidate.\",\n              title: CandidateId ? \"Edit Candidate\" : \"Add Candidate\",\n              style: {\n                textAlign: \"center\"\n              },\n              titleTypographyProps: {\n                variant: \"h3\",\n                component: \"h3\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              p: 3,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Name\",\n                    name: \"Name\",\n                    value: values.Name,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Name && errors.Name),\n                    helperText: touched.Name && errors.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"DOB\",\n                    variant: \"outlined\",\n                    value: values.DOB,\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.DOB && errors.DOB),\n                    helperText: touched.DOB && errors.DOB\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Designation\",\n                    name: \"Designation\",\n                    value: values.Designation,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Designation && errors.Designation),\n                    helperText: touched.Designation && errors.Designation\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Email\",\n                    name: \"Email\",\n                    type: \"Email\",\n                    value: values.Email,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Email && errors.Email),\n                    helperText: touched.Email && errors.Email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Skills\",\n                    name: \"Skills\",\n                    variant: \"outlined\",\n                    value: values.Skills,\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    helperText: touched.Skills && errors.Skills\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Contact\",\n                    name: \"Contact\",\n                    value: values.Contact,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 10\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Contact && errors.Contact),\n                    helperText: touched.Contact && errors.Contact\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Experience\",\n                    name: \"Experience\",\n                    value: values.Experience,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Experience && errors.Experience),\n                    helperText: touched.Experience && errors.Experience\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Profile\",\n                    name: \"Profile\",\n                    value: values.Profile,\n                    variant: \"outlined\",\n                    SelectProps: {\n                      native: true\n                    },\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Profile && errors.Profile),\n                    helperText: touched.Profile && errors.Profile,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"- None -\"\n                    }, \"-1\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 27\n                    }, this), roles.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option._id,\n                      children: option.RoleName\n                    }, option._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Reason For Leaveing\",\n                    name: \"Reason_For_Leaving\",\n                    value: values.Reason_For_Leaving,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Reason_For_Leaving && errors.Reason_For_Leaving),\n                    helperText: touched.Reason_For_Leaving && errors.Reason_For_Leaving\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Source\",\n                    name: \"Source\",\n                    value: values.Source,\n                    variant: \"outlined\",\n                    SelectProps: {\n                      native: true\n                    },\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Source && errors.Source),\n                    helperText: touched.Source && errors.Source,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"- None -\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 27\n                    }, this), reportingmanagers.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option._id,\n                      children: option.Name\n                    }, option._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Interview Schedule\",\n                    name: \"Interview_Schedule\",\n                    value: values.Interview_Schedule,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Interview_Schedule && errors.Interview_Schedule),\n                    helperText: touched.Interview_Schedule && errors.Interview_Schedule\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Date Of Joining\",\n                    name: \"Date_Of_Joining\",\n                    value: values.Date_Of_Joining,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Date_Of_Joining && errors.Date_Of_Joining),\n                    helperText: touched.Date_Of_Joining && errors.Date_Of_Joining\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Hiring Status\",\n                    name: \"Hiring_Status\",\n                    value: values.Hiring_Status,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Hiring_Status && errors.Hiring_Status),\n                    helperText: touched.Hiring_Status && errors.Hiring_Status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Comment\",\n                    name: \"Comment\",\n                    value: values.Comment,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Comment && errors.Comment),\n                    helperText: touched.Comment && errors.Comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Notice Period\",\n                    name: \"Notice_Period\",\n                    value: values.Notice_Period,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Notice_Period && errors.Notice_Period),\n                    helperText: touched.Notice_Period && errors.Notice_Period\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Ready To Relocate\",\n                    name: \"Ready_To_Relocate\",\n                    value: values.Ready_To_Relocate,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Ready_To_Relocate && errors.Ready_To_Relocate),\n                    helperText: touched.Ready_To_Relocate && errors.Ready_To_Relocate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Communication\",\n                    name: \"Communication\",\n                    value: values.Communication,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Communication && errors.Communication),\n                    helperText: touched.Communication && errors.Communication\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Current CTC\",\n                    name: \"Current_CTC\",\n                    value: values.Current_CTC,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Current_CTC && errors.Current_CTC),\n                    helperText: touched.Current_CTC && errors.Current_CTC\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Current Location\",\n                    name: \"Current_Location\",\n                    value: values.Current_Location,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Current_Location && errors.Current_Location),\n                    helperText: touched.Current_Location && errors.Current_Location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Expected CTC\",\n                    name: \"Expected_CTC\",\n                    value: values.Expected_CTC,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Expected_CTC && errors.Expected_CTC),\n                    helperText: touched.Expected_CTC && errors.Expected_CTC\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"College Name\",\n                    name: \"College_Name\",\n                    value: values.College_Name,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.College_Name && errors.College_Name),\n                    helperText: touched.College_Name && errors.College_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  sm: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: viewOnly,\n                    label: \"Resume\",\n                    name: \"Resume\",\n                    value: values.Resume,\n                    variant: \"outlined\",\n                    inputProps: {\n                      maxLength: 100\n                    },\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.Resume && errors.Resume),\n                    helperText: touched.Resume && errors.Resume\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"center\",\n              p: 1,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: viewOnly,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                className: classes.button,\n                children: isSubmitting ? \"Please wait...\" : CandidateId ? \"Update\" : \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                size: \"large\",\n                variant: \"contained\",\n                className: classes.button,\n                href: manageCandidatePath,\n                children: CandidateId ? \"Cancel\" : \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCandidate, \"i8Ia+p6HQZ1SnMlyMxZtqNbWYLg=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddCandidate;\nexport default AddCandidate;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCandidate\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/Admin/Candidate/AddCandidate.tsx"],"names":["useState","useEffect","useContext","Box","Button","Card","CardHeader","Divider","Grid","TextField","makeStyles","Yup","Formik","getRolesRequest","getReportingManagersRequest","getCandidateByIdRequest","addCandidateByIdRequest","updateCandidateByIdRequest","PROJECT_PATHS","NumbersRegExp","DashboardPage","SessionContext","snackbarAlert","Spinner","useStyles","theme","mainBox","maxWidth","margin","button","spacing","AddCandidate","props","classes","loggedInUser","user","CandidateId","match","params","id","manageCandidatePath","Manager","find","x","pagename","path","loading","setLoading","viewOnly","setViewOnly","roles","setRoles","reportingmanagers","setReportingManagers","editableCandidate","setEditableCandidate","undefined","initialValues","setInitialValues","Name","DOB","Email","Skills","Contact","Designation","ModifiedBy","Profile","Experience","Reason_For_Leaving","Source","Interview_Schedule","Date_Of_Joining","Hiring_Status","Comment","Notice_Period","Ready_To_Relocate","Communication","Current_CTC","Current_Location","Expected_CTC","College_Name","_id","Resume","getRoles","response","Status","ResponseCode","drp_roles","Roles","error","getReportingManagers","drp_users","Users","getCandidateById","console","log","data","Candidate","execPreLoadFunctions","handleSubmit","values","resetForm","candidate","status","history","push","warning","success","validationSchema","object","shape","string","min","max","required","email","matches","errors","handleBlur","handleChange","isSubmitting","touched","textAlign","variant","component","maxLength","Boolean","native","shrink","map","option","RoleName"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, yupToFormErrors } from \"formik\";\r\nimport {\r\n  getRolesRequest,\r\n  getReportingManagersRequest,\r\n  getCandidateByIdRequest,\r\n  addCandidateByIdRequest,\r\n  updateCandidateByIdRequest,\r\n} from \"../../../services/Admin\";\r\nimport { IUserDropdown } from \"../../../classes/IUserShort\";\r\nimport IRole from \"../../../classes/IRole\";\r\nimport { ICandidate, IRegisterUser, IUpdateUser } from \"../../../classes/IUser\";\r\nimport ILoginUser from \"../../../classes/ILoginUser\";\r\nimport { PROJECT_PATHS, NumbersRegExp } from \"../../../shared/constants\";\r\nimport DashboardPage from \"../../Page/DashboardPage\";\r\nimport SessionContext from \"../../../context/SessionContext\";\r\nimport snackbarAlert from \"../../SnackbarAlert\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  mainBox: {\r\n    maxWidth: 800,\r\n    margin: \"16px auto 0\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface IFormValues {\r\n  Name: String;\r\n  DOB: String;\r\n  Email: String;\r\n  Skills: String;\r\n  Contact: String;\r\n  Designation: String;\r\n  ModifiedBy: String;\r\n  Profile: String;\r\n  Experience: String;\r\n  Reason_For_Leaving: String;\r\n  Source: String;\r\n  Interview_Schedule: String;\r\n  Date_Of_Joining: String;\r\n  Hiring_Status: String;\r\n  Comment: String;\r\n  Notice_Period: String;\r\n  Ready_To_Relocate: String;\r\n  Communication: String;\r\n  Current_CTC: String;\r\n  Current_Location: String;\r\n  Expected_CTC: String;\r\n  College_Name: String;\r\n  _id: String;\r\n  Resume: String;\r\n}\r\n\r\nconst AddCandidate = (props: any) => {\r\n  const classes = useStyles();\r\n  const loggedInUser = useContext(SessionContext).user as ILoginUser;\r\n  const CandidateId = props.match.params.id;\r\n  const manageCandidatePath = PROJECT_PATHS.Manager.find(\r\n    (x) => x.pagename === \"viewcandidates\"\r\n  )?.path as string;\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewOnly, setViewOnly] = useState(false);\r\n  const [roles, setRoles] = useState([] as IRole[]);\r\n  const [reportingmanagers, setReportingManagers] = useState(\r\n    [] as IUserDropdown[]\r\n  );\r\n  const [editableCandidate, setEditableCandidate] = useState(\r\n    undefined as ICandidate | undefined\r\n  );\r\n  const [initialValues, setInitialValues] = useState({\r\n    Name: \"\",\r\n    DOB: \"\",\r\n    Email: \"\",\r\n    Skills: \"\",\r\n    Contact: \"\",\r\n    Designation: \"\",\r\n    ModifiedBy: \"\",\r\n    Profile: \"\",\r\n    Experience: \"\",\r\n    Reason_For_Leaving: \"\",\r\n    Source: \"\",\r\n    Interview_Schedule: \"\",\r\n    Date_Of_Joining: \"\",\r\n    Hiring_Status: \"\",\r\n    Comment: \"\",\r\n    Notice_Period: \"\",\r\n    Ready_To_Relocate: \"\",\r\n    Communication: \"\",\r\n    Current_CTC: \"\",\r\n    Current_Location: \"\",\r\n    Expected_CTC: \"\",\r\n    College_Name: \"\",\r\n    _id: \"\",\r\n    Resume: \"\",\r\n  } as IFormValues);\r\n\r\n  const getRoles = async () => {\r\n    try {\r\n      const response = await getRolesRequest();\r\n      if (response && response.Status.ResponseCode == 200) {\r\n        const drp_roles: IRole[] = response.Roles;\r\n        setRoles(drp_roles);\r\n      } else {\r\n        snackbarAlert.error(\"Oops! Something Broke!\");\r\n      }\r\n    } catch (error) {\r\n      snackbarAlert.error(\"Oops! Something Broke!\");\r\n    }\r\n  };\r\n\r\n  const getReportingManagers = async () => {\r\n    try {\r\n      const response = await getReportingManagersRequest();\r\n      if (response && response.Status.ResponseCode == 200) {\r\n        const drp_users: IUserDropdown[] = response.Users;\r\n        setReportingManagers(drp_users);\r\n      } else {\r\n        snackbarAlert.error(\"Oops! Something Broke!\");\r\n      }\r\n    } catch (error) {\r\n      snackbarAlert.error(\"Oops! Something Broke!\");\r\n    }\r\n  };\r\n\r\n  const getCandidateById = async (CandidateId: string) => {\r\n    try {\r\n      const response = await getCandidateByIdRequest(CandidateId);\r\n      console.log(\"respo\", response.data);\r\n      if (response) {\r\n        const Candidate: ICandidate | undefined = response.data;\r\n        if (Candidate) {\r\n          setEditableCandidate(Candidate);\r\n          setInitialValues({\r\n            Name: Candidate.Name,\r\n            DOB: Candidate.DOB,\r\n            Email: Candidate.Email,\r\n            Skills: Candidate.Skills,\r\n            Contact: Candidate.Contact,\r\n            Designation: Candidate.Designation,\r\n            Experience: Candidate.Experience,\r\n            Profile: Candidate.Profile,\r\n            Reason_For_Leaving: Candidate.Reason_For_Leaving,\r\n            Source: Candidate.Source,\r\n            Interview_Schedule: Candidate.Interview_Schedule,\r\n            Date_Of_Joining: Candidate.Date_Of_Joining,\r\n            Hiring_Status: Candidate.Hiring_Status,\r\n            Comment: Candidate.Comment,\r\n            Notice_Period: Candidate.Notice_Period,\r\n            Ready_To_Relocate: Candidate.Ready_To_Relocate,\r\n            Communication: Candidate.Communication,\r\n            Current_CTC: Candidate.Current_CTC,\r\n            Current_Location: Candidate.Current_Location,\r\n            Expected_CTC: Candidate.Expected_CTC,\r\n            College_Name: Candidate.College_Name,\r\n            ModifiedBy: loggedInUser._id,\r\n            _id: CandidateId,\r\n            Resume: \"\",\r\n          });\r\n          setLoading(false);\r\n        } else {\r\n          snackbarAlert.error(\"Oops! Something Broke!\");\r\n        }\r\n      } else {\r\n        snackbarAlert.error(\"Oops! Something Broke!\");\r\n      }\r\n    } catch (error) {\r\n      snackbarAlert.error(\"Oops! Something Broke!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"CandidateId\", CandidateId);\r\n    (async function execPreLoadFunctions() {\r\n      // await getRoles();\r\n      // await getReportingManagers();\r\n      if (CandidateId) {\r\n        await getCandidateById(CandidateId);\r\n        setViewOnly(false);\r\n      } else {\r\n        setLoading(false);\r\n        setViewOnly(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: IFormValues, { resetForm }: any) => {\r\n    try {\r\n      console.log(\"handle called\");\r\n      if (CandidateId) {\r\n        const candidate: ICandidate = {\r\n          Name: values.Name,\r\n          DOB: values.DOB,\r\n          Email: values.Email,\r\n          Skills: values.Skills,\r\n          Contact: values.Contact,\r\n          Designation: values.Designation,\r\n          Experience: values.Experience,\r\n          Profile: values.Profile,\r\n          Reason_For_Leaving: values.Reason_For_Leaving,\r\n          Source: values.Source,\r\n          Interview_Schedule: values.Interview_Schedule,\r\n          Date_Of_Joining: values.Date_Of_Joining,\r\n          Hiring_Status: values.Hiring_Status,\r\n          Comment: values.Comment,\r\n          Notice_Period: values.Notice_Period,\r\n          Ready_To_Relocate: values.Ready_To_Relocate,\r\n          Communication: values.Communication,\r\n          Current_CTC: values.Current_CTC,\r\n          Current_Location: values.Current_Location,\r\n          Expected_CTC: values.Expected_CTC,\r\n          College_Name: values.College_Name,\r\n          ModifiedBy: loggedInUser._id,\r\n          Resume: \"\",\r\n          _id: CandidateId,\r\n        };\r\n        console.log(\"candidate\", candidate);\r\n        const response = await updateCandidateByIdRequest(\r\n          CandidateId,\r\n          candidate\r\n        );\r\n        console.log(\"response submit\", response.status);\r\n        if (response && response.status === true) {\r\n          props.history.push(manageCandidatePath);\r\n        } else if (response.status == 205) {\r\n          snackbarAlert.warning(\r\n            \"Email or phone already exists! Please enter unique one.\"\r\n          );\r\n        } else {\r\n          console.log(\"response submit\", response.status);\r\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\r\n        }\r\n      } else {\r\n        const candidate: ICandidate = {\r\n          Name: values.Name,\r\n          DOB: values.DOB,\r\n          Email: values.Email,\r\n          Skills: values.Skills,\r\n          Contact: values.Contact,\r\n          Designation: values.Designation,\r\n          Experience: values.Experience,\r\n          Profile: values.Profile,\r\n          Reason_For_Leaving: values.Reason_For_Leaving,\r\n          Source: values.Source,\r\n          Interview_Schedule: values.Interview_Schedule,\r\n          Date_Of_Joining: values.Date_Of_Joining,\r\n          Hiring_Status: values.Hiring_Status,\r\n          Comment: values.Comment,\r\n          Notice_Period: values.Notice_Period,\r\n          Ready_To_Relocate: values.Ready_To_Relocate,\r\n          Communication: values.Communication,\r\n          Current_CTC: values.Current_CTC,\r\n          Current_Location: values.Current_Location,\r\n          Expected_CTC: values.Expected_CTC,\r\n          College_Name: values.College_Name,\r\n          ModifiedBy: loggedInUser._id,\r\n          _id: \"\",\r\n          Resume: \"\",\r\n        };\r\n        console.log(\"candidate\", candidate);\r\n        const response = await addCandidateByIdRequest(candidate);\r\n        if (response && response.status === true) {\r\n          snackbarAlert.success(\"Candidate added successfully!\");\r\n          resetForm();\r\n        } else if (response.Status.ResponseCode == 205) {\r\n          snackbarAlert.warning(\r\n            \"Email or phone already exists! Please enter unique one.\"\r\n          );\r\n        } else {\r\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      snackbarAlert.error(\"Oops! Something Broke!\");\r\n    }\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    Name: Yup.string()\r\n      .min(3, \"Name should be minimum 3 characters!\")\r\n      .max(100, \"Name should be maximum 100 characters!\")\r\n      .required(\"Name is required!\"),\r\n    Email: Yup.string()\r\n      .email(\"Must be a valid email!\")\r\n      .max(100, \"Email should be maximum 100 characters!\")\r\n      .required(\"Email is required!\"),\r\n    DOB: Yup.string()\r\n      .required(\"Date of Birth is required!\" ), \r\n    Skills: Yup.string()\r\n         .required(\"Skills are required\"),\r\n    Contact: Yup.string()\r\n      .min(10, \"Phone number should be 10 digits!\")\r\n      .max(10, \"Phone number should be 10 digits!\")\r\n      .matches(NumbersRegExp, \"Must be a valid phone number!\")\r\n      .required(\"Phone number is required!\"),\r\n    Designation: Yup.string()\r\n      .min(5, \"designation should have minimum 5 charaters!\")\r\n      .max(100,\"designation should have maximum 100 charater!\")\r\n      .required(\"designation should required\"),  \r\n    Experience: Yup.string()\r\n      .required(\"Experience is required\"),\r\n    Profile: Yup.string()\r\n      .required(\"Profile is required\"),\r\n    Reason_For_Leaving: Yup.string()\r\n      .required(\"Reason for leaving is required\"),\r\n    Source: Yup.string()\r\n      .required(\"Source is required\"),\r\n    Interview_Schedule: Yup.string()\r\n       .required(\"schedule for interview is required\"),\r\n    Date_Of_Joining: Yup.string()\r\n       .required(\"joining date is required\"),\r\n    Hiring_Status: Yup.string()\r\n       .required(\"hiring status is required\"),   \r\n    Comment: Yup.string()\r\n       .required(\"comment is required\"),\r\n    Notice_Period: Yup.string()\r\n       .required(\"notice period is required\"),\r\n    Ready_To_Relocate: Yup.string()\r\n       .required(\"ready to relocate is required\"),\r\n    Communication: Yup.string()\r\n      .min(3, \"should be minimum 3 charaters\")\r\n      .max(100, \"communication should have maximun 100 charaters!\")\r\n      .required(\"communication is required\"),           \r\n    Current_CTC: Yup.string()\r\n      .required(\"current CTC is required\"),\r\n    Current_Location: Yup.string()\r\n       .required(\"current location is required\"),  \r\n    Expected_CTC: Yup.string()\r\n      .required(\"expected ctc is required\"),\r\n    College_Name: Yup.string()\r\n       .min(10,\"college name should be 10 charaters!\")  \r\n       .max(100,\"college name should be 100 charaters!\")\r\n       .required(\"college name is required\"),\r\n    Resume: Yup.string()\r\n      .required(\"resume is required\")    \r\n  });\r\n\r\n  return (\r\n    <DashboardPage\r\n      title={\r\n        CandidateId\r\n          ? \"Manage Candidates | Edit Candidate\"\r\n          : \"Manage Candidates | Add Candidate\"\r\n      }\r\n    >\r\n      {!loading ? (\r\n        <Box className={classes.mainBox}>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Card>\r\n                  <CardHeader\r\n                    subheader={\r\n                      CandidateId\r\n                        ? \"Please change the below details to update candidate.\"\r\n                        : \"Please fill the below details to add candidate.\"\r\n                    }\r\n                    title={CandidateId ? \"Edit Candidate\" : \"Add Candidate\"}\r\n                    style={{ textAlign: \"center\" }}\r\n                    titleTypographyProps={{ variant: \"h3\", component: \"h3\" }}\r\n                  />\r\n                  <Divider />\r\n                  <Box p={3}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Name\"\r\n                          name=\"Name\"\r\n                          value={values.Name}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Name && errors.Name)}\r\n                          helperText={touched.Name && errors.Name}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"DOB\"\r\n                          variant=\"outlined\"\r\n                          value={values.DOB}\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.DOB && errors.DOB)}\r\n                          helperText={touched.DOB && errors.DOB}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Designation\"\r\n                          name=\"Designation\"\r\n                          value={values.Designation}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Designation && errors.Designation\r\n                          )}\r\n                          helperText={touched.Designation && errors.Designation}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Email\"\r\n                          name=\"Email\"\r\n                          type=\"Email\"\r\n                          value={values.Email}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Email && errors.Email)}\r\n                          helperText={touched.Email && errors.Email}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Skills\"\r\n                          name=\"Skills\"\r\n                          variant=\"outlined\"\r\n                          value={values.Skills}\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          helperText={touched.Skills && errors.Skills}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Contact\"\r\n                          name=\"Contact\"\r\n                          value={values.Contact}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 10 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Contact && errors.Contact)}\r\n                          helperText={touched.Contact && errors.Contact}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Experience\"\r\n                          name=\"Experience\"\r\n                          value={values.Experience}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Experience && errors.Experience\r\n                          )}\r\n                          helperText={touched.Experience && errors.Experience}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Profile\"\r\n                          name=\"Profile\"\r\n                          value={values.Profile}\r\n                          variant=\"outlined\"\r\n                          SelectProps={{ native: true }}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Profile && errors.Profile)}\r\n                          helperText={touched.Profile && errors.Profile}\r\n                        >\r\n                          <option key=\"-1\" value=\"\">\r\n                            - None -\r\n                          </option>\r\n                          {roles.map((option) => (\r\n                            <option key={option._id} value={option._id}>\r\n                              {option.RoleName}\r\n                            </option>\r\n                          ))}\r\n                        </TextField>\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Reason For Leaveing\"\r\n                          name=\"Reason_For_Leaving\"\r\n                          value={values.Reason_For_Leaving}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Reason_For_Leaving &&\r\n                              errors.Reason_For_Leaving\r\n                          )}\r\n                          helperText={\r\n                            touched.Reason_For_Leaving &&\r\n                            errors.Reason_For_Leaving\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Source\"\r\n                          name=\"Source\"\r\n                          value={values.Source}\r\n                          variant=\"outlined\"\r\n                          SelectProps={{ native: true }}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Source && errors.Source)}\r\n                          helperText={touched.Source && errors.Source}\r\n                        >\r\n                          <option value=\"\">- None -</option>\r\n                          {reportingmanagers.map((option) => (\r\n                            <option key={option._id} value={option._id}>\r\n                              {option.Name}\r\n                            </option>\r\n                          ))}\r\n                        </TextField>\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Interview Schedule\"\r\n                          name=\"Interview_Schedule\"\r\n                          value={values.Interview_Schedule}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Interview_Schedule &&\r\n                              errors.Interview_Schedule\r\n                          )}\r\n                          helperText={\r\n                            touched.Interview_Schedule &&\r\n                            errors.Interview_Schedule\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Date Of Joining\"\r\n                          name=\"Date_Of_Joining\"\r\n                          value={values.Date_Of_Joining}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Date_Of_Joining && errors.Date_Of_Joining\r\n                          )}\r\n                          helperText={\r\n                            touched.Date_Of_Joining && errors.Date_Of_Joining\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Hiring Status\"\r\n                          name=\"Hiring_Status\"\r\n                          value={values.Hiring_Status}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Hiring_Status && errors.Hiring_Status\r\n                          )}\r\n                          helperText={\r\n                            touched.Hiring_Status && errors.Hiring_Status\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Comment\"\r\n                          name=\"Comment\"\r\n                          value={values.Comment}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Comment && errors.Comment)}\r\n                          helperText={touched.Comment && errors.Comment}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Notice Period\"\r\n                          name=\"Notice_Period\"\r\n                          value={values.Notice_Period}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Notice_Period && errors.Notice_Period\r\n                          )}\r\n                          helperText={\r\n                            touched.Notice_Period && errors.Notice_Period\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Ready To Relocate\"\r\n                          name=\"Ready_To_Relocate\"\r\n                          value={values.Ready_To_Relocate}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Ready_To_Relocate &&\r\n                              errors.Ready_To_Relocate\r\n                          )}\r\n                          helperText={\r\n                            touched.Ready_To_Relocate &&\r\n                            errors.Ready_To_Relocate\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Communication\"\r\n                          name=\"Communication\"\r\n                          value={values.Communication}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Communication && errors.Communication\r\n                          )}\r\n                          helperText={\r\n                            touched.Communication && errors.Communication\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Current CTC\"\r\n                          name=\"Current_CTC\"\r\n                          value={values.Current_CTC}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Current_CTC && errors.Current_CTC\r\n                          )}\r\n                          helperText={touched.Current_CTC && errors.Current_CTC}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Current Location\"\r\n                          name=\"Current_Location\"\r\n                          value={values.Current_Location}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Current_Location && errors.Current_Location\r\n                          )}\r\n                          helperText={\r\n                            touched.Current_Location && errors.Current_Location\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Expected CTC\"\r\n                          name=\"Expected_CTC\"\r\n                          value={values.Expected_CTC}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.Expected_CTC && errors.Expected_CTC\r\n                          )}\r\n                          helperText={\r\n                            touched.Expected_CTC && errors.Expected_CTC\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"College Name\"\r\n                          name=\"College_Name\"\r\n                          value={values.College_Name}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.College_Name && errors.College_Name\r\n                          )}\r\n                          helperText={\r\n                            touched.College_Name && errors.College_Name\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled={viewOnly}\r\n                          label=\"Resume\"\r\n                          name=\"Resume\"\r\n                          value={values.Resume}\r\n                          variant=\"outlined\"\r\n                          inputProps={{ maxLength: 100 }}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.Resume && errors.Resume)}\r\n                          helperText={touched.Resume && errors.Resume}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box display=\"flex\" justifyContent=\"center\" p={1}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      disabled={viewOnly}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      className={classes.button}\r\n                    >\r\n                      {isSubmitting\r\n                        ? \"Please wait...\"\r\n                        : CandidateId\r\n                        ? \"Update\"\r\n                        : \"Add\"}\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      className={classes.button}\r\n                      href={manageCandidatePath}\r\n                    >\r\n                      {CandidateId ? \"Cancel\" : \"Back\"}\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </DashboardPage>\r\n  );\r\n};\r\nexport default AddCandidate;\r\n"]},"metadata":{},"sourceType":"module"}