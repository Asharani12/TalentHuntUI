{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\Admin\\\\Candidate\\\\ManageCandidate.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box, Button, Card, Grid, InputAdornment, SvgIcon, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { getCandidateRequest, deleteUserRequest } from \"../../../services/Admin\";\nimport SessionContext from \"../../../context/SessionContext\";\nimport { PROJECT_PATHS } from \"../../../shared/constants\";\nimport DashboardPage from \"../../Page/DashboardPage\";\nimport GridView from \"../../DataGrid\";\nimport DialogBox from \"../../DialogBox\";\nimport snackbarAlert from \"../../SnackbarAlert\";\nimport Spinner from \"../../Spinner\";\nimport ViewDialogBox from \"../../DialogBox/ViewDialogBox\";\nimport ViewCandidate from \"./ViewCandidate\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  mbottom: {\n    marginBottom: theme.spacing(3)\n  },\n  avatar: {\n    cursor: \"pointer\",\n    width: 40,\n    height: 40\n  }\n}));\nlet filters = {\n  SourceId: \"\",\n  ProfileId: \"\",\n  SearchStr: \"\"\n};\n\nconst ManageCandidate = () => {\n  _s();\n\n  var _PROJECT_PATHS$Hiring, _PROJECT_PATHS$Hiring2;\n\n  const classes = useStyles();\n  const loggedInUser = useContext(SessionContext).user;\n  const initialDialogState = {\n    open: false,\n    title: \"Delete User\",\n    description: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Are you sure you want to delete this user?\"\n    }, void 0, false),\n    UserId: \"\"\n  };\n  const initialViewDialogState = {\n    open: false,\n    title: \"View Candidate\",\n    content: null\n  };\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [reportingmanagers, setReportingManagers] = useState([]);\n  const [submmitting, setSubmmitting] = useState(false);\n  const [dialog, setDialog] = useState(initialDialogState);\n  const [viewDialog, setViewDialog] = useState(initialViewDialogState);\n  const addCandidatePath = (_PROJECT_PATHS$Hiring = PROJECT_PATHS.HiringManager.find(x => x.pagename === \"addcandidate\")) === null || _PROJECT_PATHS$Hiring === void 0 ? void 0 : _PROJECT_PATHS$Hiring.path;\n  const editCandidatePath = (_PROJECT_PATHS$Hiring2 = PROJECT_PATHS.HiringManager.find(x => x.pagename === \"editcandidate\")) === null || _PROJECT_PATHS$Hiring2 === void 0 ? void 0 : _PROJECT_PATHS$Hiring2.path;\n  const SOURCE = [{\n    key: \"Indeed\",\n    value: \"Indeed\"\n  }, {\n    key: \"Angel.Co\",\n    value: \"Angel.Co\"\n  }, {\n    key: \"LinkedIn\",\n    value: \"Linkedin\"\n  }, {\n    key: \"Hirect\",\n    value: \"Hirect\"\n  }, {\n    key: \"Newton\",\n    value: \"Newton\"\n  }, {\n    key: \"FunctionUp\",\n    value: \"FunctionUp\"\n  }, {\n    key: \"Referrals\",\n    value: \"Referrals\"\n  }, {\n    key: \"Website\",\n    value: \"Website\"\n  }, {\n    key: \"Others\",\n    value: \"Others\"\n  }];\n  const PROFILES = [{\n    key: \"UI/UX Designer\",\n    value: \"UI/UX Designer\"\n  }, {\n    key: \"UI Developer\",\n    value: \"UI Developer\"\n  }, {\n    key: \"FullStack\",\n    value: \"FullStack\"\n  }, {\n    key: \"DevOps\",\n    value: \"DevOps\"\n  }, {\n    key: \".NET\",\n    value: \".NET\"\n  }, {\n    key: \"PHP\",\n    value: \"PHP\"\n  }, {\n    key: \"BDE\",\n    value: \"BDE\"\n  }, {\n    key: \"Blockchain Developer\",\n    value: \"Blockchain Developer\"\n  }];\n  const columns = [// {\n  //   field: \"Photo\",\n  //   headerName: \"Photo\",\n  //   headerAlign: \"center\",\n  //   cellClassName: \"text-center\",\n  //   width: 70,\n  //   sortable: false,\n  //   renderCell: (params: GridCellParams) => (\n  //     <Avatar className={classes.avatar} src={params.row.ProfilePhoto}>\n  //       {getInitials(params.row.FirstName + \" \" + params.row.LastName)}\n  //     </Avatar>\n  //   ),\n  // },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    width: 110,\n    // valueGetter: (params: GridValueGetterParams) => `${params.row.Name}`,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      style: {\n        fontWeight: \"normal\",\n        textTransform: \"unset\",\n        padding: 0\n      },\n      onClick: () => showViewDialogBox(params.row),\n      children: params.row.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"Email\",\n    headerName: \"Email\",\n    width: 110\n  }, {\n    field: \"Contact\",\n    headerName: \"Contact\",\n    width: 110\n  }, {\n    field: \"Skills\",\n    headerName: \"Skills\",\n    flex: 1\n  }, {\n    field: \"Source\",\n    headerName: \"Source\",\n    width: 100,\n    valueGetter: params => `${params.row.Source}`\n  }, {\n    field: \"Profile\",\n    headerName: \"Profile\",\n    width: 125,\n    headerClassName: \"text-left\",\n    valueFormatter: params => `${params.row.Profile}`\n  }];\n\n  if (loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" || loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\") {\n    columns.push({\n      field: \" \",\n      headerName: \" \",\n      cellClassName: \"text-center\",\n      width: 120,\n      sortable: false,\n      renderCell: params => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [(loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" || loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\") && /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          className: \"gridbutton btnEdit\",\n          \"aria-label\": \"edit\",\n          disabled: submmitting,\n          href: editCandidatePath.replace(\":id\", `${params.row._id}`),\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), (loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" || loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\") && /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          className: \"gridbutton btnDelete\",\n          \"aria-label\": \"delete\",\n          disabled: submmitting,\n          onClick: () => showDialogBox(`${params.row._id}`, `${params.row.Name}`),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    });\n  }\n\n  const convertTime24to12 = time => {\n    let convertedTime = time;\n\n    if (time) {\n      let [hours, minutes] = time.split(\":\").map(Number);\n      const AmOrPm = hours >= 12 ? \"PM\" : \"AM\";\n      hours = hours % 12 || 12;\n      convertedTime = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \" \" + AmOrPm;\n    }\n\n    return convertedTime;\n  };\n\n  const showDialogBox = (UserId, Name) => {\n    let popupdesc = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Are you sure you want to delete this Candidate - \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"\\\"\", Name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 58\n      }, this), \"?\"]\n    }, void 0, true);\n\n    setDialog({ ...dialog,\n      open: true,\n      description: popupdesc,\n      UserId: UserId\n    });\n  };\n\n  const closeDialogBox = () => {\n    setDialog({ ...dialog,\n      open: false,\n      UserId: \"\"\n    });\n  };\n\n  const showViewDialogBox = candidate => {\n    setViewDialog({ ...viewDialog,\n      open: true,\n      content: candidate\n    });\n  };\n\n  const closeViewDialogBox = () => {\n    setViewDialog({ ...viewDialog,\n      open: false\n    });\n  }; // const getRoles = async () => {\n  //   try {\n  //     const response = await getRolesRequest();\n  //     if (response && response.Status.ResponseCode == 200) {\n  //       const drp_roles: IRole[] = response.Roles;\n  //       setRoles(drp_roles);\n  //     } else {\n  //       snackbarAlert.error(\"Oops! Something Broke!\");\n  //     }\n  //   } catch (error) {\n  //     snackbarAlert.error(\"Oops! Something Broke!\");\n  //   }\n  // };\n  // const getReportingManagers = async () => {\n  //   try {\n  //     const response = await getReportingManagersRequest();\n  //     if (response && response.Status.ResponseCode == 200) {\n  //       const drp_users: IUserDropdown[] = response.Users;\n  //       setReportingManagers(drp_users);\n  //     } else {\n  //       snackbarAlert.error(\"Oops! Something Broke!\");\n  //     }\n  //   } catch (error) {\n  //     snackbarAlert.error(\"Oops! Something Broke!\");\n  //   }\n  // };\n\n\n  const getCandidate = async () => {\n    try {\n      const response = await getCandidateRequest();\n\n      if (response) {\n        console.log(\"cand response\", response.Data);\n        const gridrows = response.Data;\n        setRows(gridrows);\n        setOriginalData(gridrows);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const deleteUser = async () => {\n    try {\n      const UserId = dialog.UserId;\n\n      if (UserId) {\n        const response = await deleteUserRequest(UserId);\n\n        if (response && response.Status.ResponseCode == 200) {\n          // await getReportingManagers();\n          await getCandidate();\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke!\");\n        }\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n\n    setSubmmitting(false);\n    closeDialogBox();\n  };\n\n  const handleSearchChange = () => {\n    let gridrows = originalData;\n\n    if (filters.ProfileId) {\n      gridrows = gridrows.filter(item => item.Profile === filters.ProfileId);\n    }\n\n    if (filters.SourceId) {\n      gridrows = gridrows.filter(item => item.Source === filters.SourceId);\n    }\n\n    if (filters.SearchStr) {\n      gridrows = gridrows.filter(item => {\n        // item.Name.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) >\n        //   -1 ||\n        if (item.Name.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1) return true;\n        if (item.Skills && item.Skills.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1) return true;\n        if (item.Email && item.Email.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1) return true;\n        if (item.Designation && item.Designation.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1) return true;\n        if (item.Current_Location && item.Current_Location.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1) return true;\n        if (item.College_Name && item.College_Name.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1) return true;\n      });\n    }\n\n    setRows(gridrows);\n  };\n\n  useEffect(() => {\n    console.log(\"loggedInUser\", loggedInUser);\n\n    (async function execPreLoadFunctions() {\n      // await getRoles();\n      // await getReportingManagers();\n      await getCandidate();\n      setLoading(false);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardPage, {\n    title: \"Manage Candidates\",\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            style: {\n              textAlign: \"left\"\n            },\n            children: (loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" || loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\") && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"large\",\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 32\n              }, this),\n              href: addCandidatePath,\n              children: \"Add Candidate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              fullWidth: true,\n              size: \"small\",\n              label: \"Select Source\",\n              variant: \"outlined\",\n              SelectProps: {\n                native: true\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => {\n                filters.SourceId = e.target.value;\n                handleSearchChange();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"- None -\"\n              }, \"-1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), SOURCE.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.value\n              }, option.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              fullWidth: true,\n              size: \"small\",\n              label: \"Select Profile\",\n              variant: \"outlined\",\n              SelectProps: {\n                native: true\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => {\n                filters.ProfileId = e.target.value;\n                handleSearchChange();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"- None -\"\n              }, \"-1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), PROFILES.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.value\n              }, option.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              size: \"small\",\n              placeholder: \"Search...\",\n              variant: \"outlined\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                    fontSize: \"small\",\n                    color: \"disabled\",\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 23\n                }, this)\n              },\n              onChange: e => {\n                filters.SearchStr = e.target.value;\n                handleSearchChange();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            minWidth: 1170,\n            children: /*#__PURE__*/_jsxDEV(GridView, {\n              columns: columns,\n              rows: rows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogBox, {\n          open: dialog.open,\n          title: dialog.title,\n          description: dialog.description,\n          isSubmitting: submmitting,\n          onDialogAction: isAgree => {\n            if (isAgree) {\n              setSubmmitting(true);\n              deleteUser();\n            } else {\n              closeDialogBox();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ViewDialogBox, {\n          open: viewDialog.open,\n          title: viewDialog.title,\n          content: viewDialog.content ? /*#__PURE__*/_jsxDEV(ViewCandidate, {\n            candidate: viewDialog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n          onDialogClose: closeViewDialogBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageCandidate, \"TpT2vreAhWjJNsGo65Qrgo5vTQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ManageCandidate;\nexport default ManageCandidate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageCandidate\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/Admin/Candidate/ManageCandidate.tsx"],"names":["useContext","useState","useEffect","PerfectScrollbar","Box","Button","Card","Grid","InputAdornment","SvgIcon","TextField","makeStyles","IconButton","AddIcon","EditIcon","DeleteIcon","SearchIcon","getCandidateRequest","deleteUserRequest","SessionContext","PROJECT_PATHS","DashboardPage","GridView","DialogBox","snackbarAlert","Spinner","ViewDialogBox","ViewCandidate","useStyles","theme","mbottom","marginBottom","spacing","avatar","cursor","width","height","filters","SourceId","ProfileId","SearchStr","ManageCandidate","classes","loggedInUser","user","initialDialogState","open","title","description","UserId","initialViewDialogState","content","loading","setLoading","rows","setRows","originalData","setOriginalData","roles","setRoles","reportingmanagers","setReportingManagers","submmitting","setSubmmitting","dialog","setDialog","viewDialog","setViewDialog","addCandidatePath","HiringManager","find","x","pagename","path","editCandidatePath","SOURCE","key","value","PROFILES","columns","field","headerName","renderCell","params","fontWeight","textTransform","padding","showViewDialogBox","row","Name","flex","valueGetter","Source","headerClassName","valueFormatter","Profile","Role","RoleName","toUpperCase","push","cellClassName","sortable","replace","_id","showDialogBox","convertTime24to12","time","convertedTime","hours","minutes","split","map","Number","AmOrPm","popupdesc","closeDialogBox","candidate","closeViewDialogBox","getCandidate","response","console","log","Data","gridrows","error","deleteUser","Status","ResponseCode","handleSearchChange","filter","item","toLowerCase","indexOf","Skills","Email","Designation","Current_Location","College_Name","execPreLoadFunctions","textAlign","native","shrink","e","target","option","startAdornment","isAgree"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {\r\n  GridColDef,\r\n  GridCellParams,\r\n  GridValueGetterParams,\r\n  GridValueFormatterParams,\r\n} from \"@material-ui/data-grid\";\r\nimport {\r\n  getCandidateRequest,\r\n  deleteUserRequest,\r\n} from \"../../../services/Admin\";\r\nimport SessionContext from \"../../../context/SessionContext\";\r\nimport { PROJECT_PATHS } from \"../../../shared/constants\";\r\nimport { ICandidate } from \"../../../classes/IUser\";\r\nimport { IUserDropdown, IUserShort } from \"../../../classes/IUserShort\";\r\nimport IRole from \"../../../classes/IRole\";\r\nimport ILoginUser from \"../../../classes/ILoginUser\";\r\nimport getInitials from \"../../../utils/getInitials\";\r\nimport moment from \"moment\";\r\nimport DashboardPage from \"../../Page/DashboardPage\";\r\nimport GridView from \"../../DataGrid\";\r\nimport DialogBox from \"../../DialogBox\";\r\nimport snackbarAlert from \"../../SnackbarAlert\";\r\nimport Spinner from \"../../Spinner\";\r\nimport ViewDialogBox from \"../../DialogBox/ViewDialogBox\";\r\nimport ViewCandidate from \"./ViewCandidate\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  mbottom: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nlet filters = {\r\n  SourceId: \"\",\r\n  ProfileId: \"\",\r\n  SearchStr: \"\",\r\n};\r\n\r\nconst ManageCandidate = () => {\r\n  const classes = useStyles();\r\n  const loggedInUser = useContext(SessionContext).user as ILoginUser;\r\n\r\n  const initialDialogState = {\r\n    open: false,\r\n    title: \"Delete User\",\r\n    description: <>Are you sure you want to delete this user?</>,\r\n    UserId: \"\",\r\n  };\r\n\r\n  const initialViewDialogState = {\r\n    open: false,\r\n    title: \"View Candidate\",\r\n    content: null,\r\n  };\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [rows, setRows] = useState([] as ICandidate[]);\r\n  const [originalData, setOriginalData] = useState([] as ICandidate[]);\r\n  const [roles, setRoles] = useState([] as IRole[]);\r\n  const [reportingmanagers, setReportingManagers] = useState(\r\n    [] as IUserDropdown[]\r\n  );\r\n  const [submmitting, setSubmmitting] = useState(false);\r\n  const [dialog, setDialog] = useState(initialDialogState);\r\n  const [viewDialog, setViewDialog] = useState(initialViewDialogState);\r\n\r\n  const addCandidatePath = PROJECT_PATHS.HiringManager.find(\r\n    (x) => x.pagename === \"addcandidate\"\r\n  )?.path as string;\r\n\r\n  const editCandidatePath = PROJECT_PATHS.HiringManager.find(\r\n    (x) => x.pagename === \"editcandidate\"\r\n  )?.path as string;\r\n\r\n  const SOURCE = [\r\n    { key: \"Indeed\", value: \"Indeed\" },\r\n    { key: \"Angel.Co\", value: \"Angel.Co\" },\r\n    { key: \"LinkedIn\", value: \"Linkedin\" },\r\n    { key: \"Hirect\", value: \"Hirect\" },\r\n    { key: \"Newton\", value: \"Newton\" },\r\n    { key: \"FunctionUp\", value: \"FunctionUp\" },\r\n    { key: \"Referrals\", value: \"Referrals\" },\r\n    { key: \"Website\", value: \"Website\" },\r\n    { key: \"Others\", value: \"Others\" },\r\n  ];\r\n  const PROFILES = [\r\n    { key: \"UI/UX Designer\", value: \"UI/UX Designer\" },\r\n    { key: \"UI Developer\", value: \"UI Developer\" },\r\n    { key: \"FullStack\", value: \"FullStack\" },\r\n    { key: \"DevOps\", value: \"DevOps\" },\r\n    { key: \".NET\", value: \".NET\" },\r\n    { key: \"PHP\", value: \"PHP\" },\r\n    { key: \"BDE\", value: \"BDE\" },\r\n    { key: \"Blockchain Developer\", value: \"Blockchain Developer\" },\r\n  ];\r\n  const columns: GridColDef[] = [\r\n    // {\r\n    //   field: \"Photo\",\r\n    //   headerName: \"Photo\",\r\n    //   headerAlign: \"center\",\r\n    //   cellClassName: \"text-center\",\r\n    //   width: 70,\r\n    //   sortable: false,\r\n    //   renderCell: (params: GridCellParams) => (\r\n    //     <Avatar className={classes.avatar} src={params.row.ProfilePhoto}>\r\n    //       {getInitials(params.row.FirstName + \" \" + params.row.LastName)}\r\n    //     </Avatar>\r\n    //   ),\r\n    // },\r\n    {\r\n      field: \"Name\",\r\n      headerName: \"Name\",\r\n      width: 110,\r\n      // valueGetter: (params: GridValueGetterParams) => `${params.row.Name}`,\r\n      renderCell: (params: GridCellParams) => (\r\n        <Button\r\n          variant=\"text\"\r\n          style={{\r\n            fontWeight: \"normal\",\r\n            textTransform: \"unset\",\r\n            padding: 0,\r\n          }}\r\n          onClick={() => showViewDialogBox(params.row)}\r\n        >\r\n          {params.row.Name}\r\n        </Button>\r\n      ),\r\n    },\r\n    {\r\n      field: \"Email\",\r\n      headerName: \"Email\",\r\n      width: 110,\r\n    },\r\n    {\r\n      field: \"Contact\",\r\n      headerName: \"Contact\",\r\n      width: 110,\r\n    },\r\n    {\r\n      field: \"Skills\",\r\n      headerName: \"Skills\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"Source\",\r\n      headerName: \"Source\",\r\n      width: 100,\r\n      valueGetter: (params: GridValueGetterParams) => `${params.row.Source}`,\r\n    },\r\n\r\n    {\r\n      field: \"Profile\",\r\n      headerName: \"Profile\",\r\n      width: 125,\r\n      headerClassName: \"text-left\",\r\n      valueFormatter: (params: GridValueFormatterParams) =>\r\n        `${params.row.Profile}`,\r\n    },\r\n  ];\r\n\r\n  if (\r\n    loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" ||\r\n    loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\"\r\n  ) {\r\n    columns.push({\r\n      field: \" \",\r\n      headerName: \" \",\r\n      cellClassName: \"text-center\",\r\n      width: 120,\r\n      sortable: false,\r\n      renderCell: (params: GridCellParams) => (\r\n        <>\r\n          {(loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" ||\r\n            loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\") && (\r\n            <IconButton\r\n              size=\"small\"\r\n              className=\"gridbutton btnEdit\"\r\n              aria-label=\"edit\"\r\n              disabled={submmitting}\r\n              href={editCandidatePath.replace(\":id\", `${params.row._id}`)}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n          )}\r\n          {(loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" ||\r\n            loggedInUser.Role.RoleName.toUpperCase() === \"HIRING MANAGER\") && (\r\n            <IconButton\r\n              size=\"small\"\r\n              className=\"gridbutton btnDelete\"\r\n              aria-label=\"delete\"\r\n              disabled={submmitting}\r\n              onClick={() =>\r\n                showDialogBox(`${params.row._id}`, `${params.row.Name}`)\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          )}\r\n        </>\r\n      ),\r\n    });\r\n  }\r\n  const convertTime24to12 = (time: string) => {\r\n    let convertedTime: string = time;\r\n    if (time) {\r\n      let [hours, minutes] = time.split(\":\").map(Number);\r\n\r\n      const AmOrPm = hours >= 12 ? \"PM\" : \"AM\";\r\n      hours = hours % 12 || 12;\r\n\r\n      convertedTime =\r\n        (hours < 10 ? \"0\" + hours : hours) +\r\n        \":\" +\r\n        (minutes < 10 ? \"0\" + minutes : minutes) +\r\n        \" \" +\r\n        AmOrPm;\r\n    }\r\n    return convertedTime;\r\n  };\r\n\r\n  const showDialogBox = (UserId: string, Name: string) => {\r\n    let popupdesc = (\r\n      <>\r\n        Are you sure you want to delete this Candidate - <b>\"{Name}\"</b>?\r\n      </>\r\n    );\r\n    setDialog({\r\n      ...dialog,\r\n      open: true,\r\n      description: popupdesc,\r\n      UserId: UserId,\r\n    });\r\n  };\r\n\r\n  const closeDialogBox = () => {\r\n    setDialog({\r\n      ...dialog,\r\n      open: false,\r\n      UserId: \"\",\r\n    });\r\n  };\r\n\r\n  const showViewDialogBox = (candidate: any) => {\r\n    setViewDialog({\r\n      ...viewDialog,\r\n      open: true,\r\n      content: candidate,\r\n    });\r\n  };\r\n\r\n  const closeViewDialogBox = () => {\r\n    setViewDialog({\r\n      ...viewDialog,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  // const getRoles = async () => {\r\n  //   try {\r\n  //     const response = await getRolesRequest();\r\n  //     if (response && response.Status.ResponseCode == 200) {\r\n  //       const drp_roles: IRole[] = response.Roles;\r\n  //       setRoles(drp_roles);\r\n  //     } else {\r\n  //       snackbarAlert.error(\"Oops! Something Broke!\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     snackbarAlert.error(\"Oops! Something Broke!\");\r\n  //   }\r\n  // };\r\n\r\n  // const getReportingManagers = async () => {\r\n  //   try {\r\n  //     const response = await getReportingManagersRequest();\r\n  //     if (response && response.Status.ResponseCode == 200) {\r\n  //       const drp_users: IUserDropdown[] = response.Users;\r\n  //       setReportingManagers(drp_users);\r\n  //     } else {\r\n  //       snackbarAlert.error(\"Oops! Something Broke!\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     snackbarAlert.error(\"Oops! Something Broke!\");\r\n  //   }\r\n  // };\r\n\r\n  const getCandidate = async () => {\r\n    try {\r\n      const response = await getCandidateRequest();\r\n\r\n      if (response) {\r\n        console.log(\"cand response\", response.Data);\r\n        const gridrows = response.Data;\r\n        setRows(gridrows);\r\n        setOriginalData(gridrows);\r\n      } else {\r\n        snackbarAlert.error(\"Oops! Something Broke!\");\r\n      }\r\n    } catch (error) {\r\n      snackbarAlert.error(\"Oops! Something Broke!\");\r\n    }\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    try {\r\n      const UserId = dialog.UserId;\r\n      if (UserId) {\r\n        const response = await deleteUserRequest(UserId);\r\n        if (response && response.Status.ResponseCode == 200) {\r\n          // await getReportingManagers();\r\n          await getCandidate();\r\n        } else {\r\n          snackbarAlert.error(\"Oops! Something Broke!\");\r\n        }\r\n      } else {\r\n        snackbarAlert.error(\"Oops! Something Broke!\");\r\n      }\r\n    } catch (error) {\r\n      snackbarAlert.error(\"Oops! Something Broke!\");\r\n    }\r\n    setSubmmitting(false);\r\n    closeDialogBox();\r\n  };\r\n\r\n  const handleSearchChange = () => {\r\n    let gridrows = originalData;\r\n\r\n    if (filters.ProfileId) {\r\n      gridrows = gridrows.filter((item) => item.Profile === filters.ProfileId);\r\n    }\r\n\r\n    if (filters.SourceId) {\r\n      gridrows = gridrows.filter((item) => item.Source === filters.SourceId);\r\n    }\r\n\r\n    if (filters.SearchStr) {\r\n      gridrows = gridrows.filter((item) => {\r\n        // item.Name.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) >\r\n        //   -1 ||\r\n        if (\r\n          item.Name.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1\r\n        )\r\n          return true;\r\n\r\n        if (\r\n          item.Skills &&\r\n          item.Skills.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) >\r\n            -1\r\n        )\r\n          return true;\r\n\r\n        if (\r\n          item.Email &&\r\n          item.Email.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1\r\n        )\r\n          return true;\r\n\r\n        if (\r\n          item.Designation &&\r\n          item.Designation.toLowerCase().indexOf(\r\n            filters.SearchStr.toLowerCase()\r\n          ) > -1\r\n        )\r\n          return true;\r\n\r\n        if (\r\n          item.Current_Location &&\r\n          item.Current_Location.toLowerCase().indexOf(\r\n            filters.SearchStr.toLowerCase()\r\n          ) > -1\r\n        )\r\n          return true;\r\n\r\n        if (\r\n          item.College_Name &&\r\n          item.College_Name.toLowerCase().indexOf(\r\n            filters.SearchStr.toLowerCase()\r\n          ) > -1\r\n        )\r\n          return true;\r\n      });\r\n    }\r\n    setRows(gridrows);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"loggedInUser\", loggedInUser);\r\n    (async function execPreLoadFunctions() {\r\n      // await getRoles();\r\n      // await getReportingManagers();\r\n      await getCandidate();\r\n      setLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardPage title=\"Manage Candidates\">\r\n      {!loading ? (\r\n        <>\r\n          <Box mt={2}>\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                sm={6}\r\n                xs={12}\r\n                className={classes.mbottom}\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                {(loggedInUser.Role.RoleName.toUpperCase() === \"ADMIN\" ||\r\n                  loggedInUser.Role.RoleName.toUpperCase() ===\r\n                    \"HIRING MANAGER\") && (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    startIcon={<AddIcon />}\r\n                    href={addCandidatePath}\r\n                  >\r\n                    Add Candidate\r\n                  </Button>\r\n                )}\r\n              </Grid>\r\n              <Grid item md={3} sm={6} xs={12} className={classes.mbottom}>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  label=\"Select Source\"\r\n                  variant=\"outlined\"\r\n                  SelectProps={{ native: true }}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  onChange={(e) => {\r\n                    filters.SourceId = e.target.value;\r\n                    handleSearchChange();\r\n                  }}\r\n                >\r\n                  <option key=\"-1\" value=\"\">\r\n                    - None -\r\n                  </option>\r\n                  {SOURCE.map((option) => (\r\n                    <option key={option.key} value={option.value}>\r\n                      {option.value}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={3} sm={6} xs={12} className={classes.mbottom}>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  label=\"Select Profile\"\r\n                  variant=\"outlined\"\r\n                  SelectProps={{ native: true }}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  onChange={(e) => {\r\n                    filters.ProfileId = e.target.value;\r\n                    handleSearchChange();\r\n                  }}\r\n                >\r\n                  <option key=\"-1\" value=\"\">\r\n                    - None -\r\n                  </option>\r\n                  {PROFILES.map((option) => (\r\n                    <option key={option.key} value={option.value}>\r\n                      {option.value}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={3} sm={6} xs={12} className={classes.mbottom}>\r\n                <TextField\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  placeholder=\"Search...\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon fontSize=\"small\" color=\"disabled\">\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    filters.SearchStr = e.target.value;\r\n                    handleSearchChange();\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Card>\r\n            <PerfectScrollbar>\r\n              <Box minWidth={1170}>\r\n                <GridView columns={columns} rows={rows} />\r\n              </Box>\r\n            </PerfectScrollbar>\r\n            <DialogBox\r\n              open={dialog.open}\r\n              title={dialog.title}\r\n              description={dialog.description}\r\n              isSubmitting={submmitting}\r\n              onDialogAction={(isAgree: boolean) => {\r\n                if (isAgree) {\r\n                  setSubmmitting(true);\r\n                  deleteUser();\r\n                } else {\r\n                  closeDialogBox();\r\n                }\r\n              }}\r\n            />\r\n            <ViewDialogBox\r\n              open={viewDialog.open}\r\n              title={viewDialog.title}\r\n              content={\r\n                viewDialog.content ? (\r\n                  <ViewCandidate candidate={viewDialog.content} />\r\n                ) : (\r\n                  <></>\r\n                )\r\n              }\r\n              onDialogClose={closeViewDialogBox}\r\n            />\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </DashboardPage>\r\n  );\r\n};\r\n\r\nexport default ManageCandidate;\r\n"]},"metadata":{},"sourceType":"module"}