{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\MyAccount\\\\MyProfile\\\\EditProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Box, Button, Card, CardContent, CardHeader, Divider, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateProfileRequest } from \"../../../services/MyAccount\";\nimport { NumbersRegExp } from \"../../../shared/constants\";\nimport snackbarAlert from \"../../SnackbarAlert/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst EditProfile = ({\n  Profile,\n  ChageRightProfileMode\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleSubmit = async values => {\n    try {\n      if (Profile) {\n        const response = await updateProfileRequest(Profile._id, values.phone, values.reminderTime);\n\n        if (response) {\n          if (response.Status.ResponseCode == 200) {\n            Profile.Phone = values.phone;\n            Profile.ReminderTime = values.reminderTime;\n            snackbarAlert.success(\"Profile updated successfully!\");\n            ChageRightProfileMode(false);\n          } else if (response.Status.ResponseCode == 205) {\n            snackbarAlert.warning(\"Phone number already exists! Please enter correct one.\");\n          } else {\n            snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n          }\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n        }\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    phone: Yup.string().min(10, 'Phone number should be 10 digits!').max(10, 'Phone number should be 10 digits!').matches(NumbersRegExp, 'Must be a valid phone number!').required('Phone number is required!'),\n    reminderTime: Yup.string().required('Reminder time is required!')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: Profile.Name,\n      phone: Profile.Phone,\n      email: Profile.Email,\n      employeeCode: Profile.EmployeeCode,\n      designation: Profile.Designation,\n      role: Profile.Role,\n      reportingManager: Profile.ReportingManager,\n      reminderTime: Profile.ReminderTime\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          subheader: \"Please change the below details to update profile.\",\n          title: \"Edit Profile\",\n          style: {\n            textAlign: \"center\"\n          },\n          titleTypographyProps: {\n            variant: 'h3',\n            component: 'h3'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Name\",\n                name: \"name\",\n                value: Profile.Name,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Email Address\",\n                name: \"email\",\n                value: Profile.Email,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Employee Code\",\n                name: \"employeeCode\",\n                value: Profile.EmployeeCode,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Designation\",\n                name: \"designation\",\n                value: Profile.Designation,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Role\",\n                name: \"role\",\n                value: Profile.Role,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Reporting Manager\",\n                name: \"reportingManager\",\n                value: Profile.ReportingManager,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Phone Number\",\n                name: \"phone\",\n                value: values.phone,\n                variant: \"outlined\",\n                inputProps: {\n                  maxLength: 10\n                },\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(touched.phone && errors.phone),\n                helperText: touched.phone && errors.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Reminder Time\",\n                name: \"reminderTime\",\n                type: \"time\",\n                value: values.reminderTime,\n                variant: \"outlined\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                inputProps: {\n                  step: 300 // 5 min\n\n                },\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(touched.reminderTime && errors.reminderTime),\n                helperText: touched.reminderTime && errors.reminderTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          p: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: isSubmitting,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            className: classes.button,\n            children: isSubmitting ? \"Please wait...\" : \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            size: \"large\",\n            variant: \"contained\",\n            className: classes.button,\n            onClick: () => ChageRightProfileMode(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfile, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditProfile;\nexport default EditProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/MyAccount/MyProfile/EditProfile.tsx"],"names":["Yup","Formik","Box","Button","Card","CardContent","CardHeader","Divider","Grid","TextField","makeStyles","updateProfileRequest","NumbersRegExp","snackbarAlert","useStyles","theme","button","margin","spacing","EditProfile","Profile","ChageRightProfileMode","classes","handleSubmit","values","response","_id","phone","reminderTime","Status","ResponseCode","Phone","ReminderTime","success","warning","error","validationSchema","object","shape","string","min","max","matches","required","name","Name","email","Email","employeeCode","EmployeeCode","designation","Designation","role","Role","reportingManager","ReportingManager","errors","handleBlur","handleChange","isSubmitting","touched","textAlign","variant","component","maxLength","Boolean","shrink","step"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid,\n    TextField\n} from \"@material-ui/core\";\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport IProfile from \"../../../classes/IProfile\";\nimport { updateProfileRequest } from \"../../../services/MyAccount\";\nimport { NumbersRegExp } from \"../../../shared/constants\";\nimport snackbarAlert from \"../../SnackbarAlert/\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    }\n}));\n\ninterface IEditProfileProps {\n    Profile: IProfile;\n    ChageRightProfileMode: (newEditMode: boolean) => void;\n}\n\nexport interface IFormValues {\n    name: string;\n    phone: number;\n    email: string;\n    employeeCode: string;\n    designation: string;\n    role: string;\n    reportingManager: string;\n    reminderTime: string;\n}\n\nconst EditProfile = ({ Profile, ChageRightProfileMode }: IEditProfileProps) => {\n    const classes = useStyles();\n\n    const handleSubmit = async (values: IFormValues) => {\n        try {\n            if (Profile) {\n                const response = await updateProfileRequest(Profile._id, values.phone, values.reminderTime);\n                if (response) {\n                    if (response.Status.ResponseCode == 200) {\n                        Profile.Phone = values.phone;\n                        Profile.ReminderTime = values.reminderTime;\n                        snackbarAlert.success(\"Profile updated successfully!\");\n                        ChageRightProfileMode(false);\n                    }\n                    else if (response.Status.ResponseCode == 205) {\n                        snackbarAlert.warning(\"Phone number already exists! Please enter correct one.\");\n                    }\n                    else {\n                        snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n                    }\n                }\n                else {\n                    snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n                }\n            }\n            else {\n                snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n            }\n        }\n        catch (error) {\n            snackbarAlert.error(\"Oops! Something Broke!\");\n        }\n    };\n\n    const validationSchema = Yup.object().shape({\n        phone: Yup.string()\n            .min(10, 'Phone number should be 10 digits!')\n            .max(10, 'Phone number should be 10 digits!')\n            .matches(NumbersRegExp, 'Must be a valid phone number!')\n            .required('Phone number is required!'),\n        reminderTime: Yup.string().required('Reminder time is required!')\n    });\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={{\n                name: Profile.Name,\n                phone: Profile.Phone,\n                email: Profile.Email,\n                employeeCode: Profile.EmployeeCode,\n                designation: Profile.Designation,\n                role: Profile.Role,\n                reportingManager: Profile.ReportingManager,\n                reminderTime: Profile.ReminderTime\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n        >\n            {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n            }) => (\n                <form onSubmit={handleSubmit}>\n                    <Card>\n                        <CardHeader\n                            subheader=\"Please change the below details to update profile.\"\n                            title=\"Edit Profile\"\n                            style={{ textAlign: \"center\" }}\n                            titleTypographyProps={{ variant: 'h3', component: 'h3' }}\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container spacing={2}>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        disabled\n                                        fullWidth\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        value={Profile.Name}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        disabled\n                                        fullWidth\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        value={Profile.Email}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        disabled\n                                        fullWidth\n                                        label=\"Employee Code\"\n                                        name=\"employeeCode\"\n                                        value={Profile.EmployeeCode}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        disabled\n                                        fullWidth\n                                        label=\"Designation\"\n                                        name=\"designation\"\n                                        value={Profile.Designation}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        disabled\n                                        fullWidth\n                                        label=\"Role\"\n                                        name=\"role\"\n                                        value={Profile.Role}\n                                        variant=\"outlined\"\n                                    >\n                                    </TextField>\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        disabled\n                                        fullWidth\n                                        label=\"Reporting Manager\"\n                                        name=\"reportingManager\"\n                                        value={Profile.ReportingManager}\n                                        variant=\"outlined\"\n                                    >\n                                    </TextField>\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Phone Number\"\n                                        name=\"phone\"\n                                        value={values.phone}\n                                        variant=\"outlined\"\n                                        inputProps={{ maxLength: 10 }}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={Boolean(touched.phone && errors.phone)}\n                                        helperText={touched.phone && errors.phone}\n\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Reminder Time\"\n                                        name=\"reminderTime\"\n                                        type=\"time\"\n                                        value={values.reminderTime}\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        inputProps={{\n                                            step: 300, // 5 min\n                                        }}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={Boolean(touched.reminderTime && errors.reminderTime)}\n                                        helperText={touched.reminderTime && errors.reminderTime}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                        <Divider />\n                        <Box\n                            display=\"flex\"\n                            justifyContent=\"flex-end\"\n                            p={2}\n                        >\n                            <Button\n                                color=\"primary\"\n                                disabled={isSubmitting}\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.button}\n                            >\n                                {(isSubmitting) ? \"Please wait...\" : \"Update\"}\n                            </Button>\n                            <Button\n                                color=\"secondary\"\n                                size=\"large\"\n                                variant=\"contained\"\n                                className={classes.button}\n                                onClick={() => ChageRightProfileMode(false)}\n                            >\n                                Cancel\n                            </Button>\n                        </Box>\n                    </Card>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default EditProfile;"]},"metadata":{},"sourceType":"module"}