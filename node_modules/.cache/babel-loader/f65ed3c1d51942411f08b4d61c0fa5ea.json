{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\layouts\\\\DashboardLayout\\\\index.tsx\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"./NavBar\";\nimport TopBar from \"../TopBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Theme-dependent styles\n// createStyles is just the identity function; it doesn't \"do anything\" at runtime, just helps guide type inference at compile time.\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n});\n\nconst DashboardLayout = withStyles(styles, {\n  withTheme: true\n})(class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobileNavOpen: false\n    };\n  }\n\n  setMobileNavOpen(isNavOpen) {\n    this.setState({\n      isMobileNavOpen: isNavOpen\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        onMobileNavOpen: () => this.setMobileNavOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        pages: this.props.pages,\n        onMobileClose: () => this.setMobileNavOpen(false),\n        openMobile: this.state.isMobileNavOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.contentContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.content,\n            children: this.props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n});\nexport default DashboardLayout;","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/layouts/DashboardLayout/index.tsx"],"names":["React","Component","withStyles","NavBar","TopBar","styles","theme","root","backgroundColor","palette","background","default","display","height","overflow","width","wrapper","flex","paddingTop","breakpoints","up","paddingLeft","contentContainer","content","DashboardLayout","withTheme","constructor","props","state","isMobileNavOpen","setMobileNavOpen","isNavOpen","setState","render","classes","pages","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA8C,0BAA9C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA;AACA;AACA,MAAMC,MAAM,GAAIC,KAAD,KAAmB;AAChCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,OADtC;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,MAAM,EAAE,MAHJ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GAD0B;AAQhCC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,OAAO,EAAE,MADF;AAEPK,IAAAA,IAAI,EAAE,UAFC;AAGPH,IAAAA,QAAQ,EAAE,QAHH;AAIPI,IAAAA,UAAU,EAAE,EAJL;AAKP,KAACZ,KAAK,CAACa,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,MAAAA,WAAW,EAAE;AADe;AALvB,GARuB;AAiBhCC,EAAAA,gBAAgB,EAAE;AAChBV,IAAAA,OAAO,EAAE,MADO;AAEhBK,IAAAA,IAAI,EAAE,UAFU;AAGhBH,IAAAA,QAAQ,EAAE;AAHM,GAjBc;AAsBhCS,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAE,UADC;AAEPJ,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AAtBuB,CAAnB,CAAf;;AAsCA,MAAMU,eAAe,GAAGtB,UAAU,CAACG,MAAD,EAAS;AAAEoB,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CACtB,cAAcxB,SAAd,CAAwD;AACtDyB,EAAAA,WAAW,CAACC,KAAD,EAAwB;AACjC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDC,EAAAA,gBAAgB,CAACC,SAAD,EAAqB;AACnC,SAAKC,QAAL,CAAc;AAAEH,MAAAA,eAAe,EAAEE;AAAnB,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKP,KAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEO,OAAO,CAAC3B,IAAxB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,eAAe,EAAE,MAAM,KAAKuB,gBAAL,CAAsB,IAAtB;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWQ,KADpB;AAEE,QAAA,aAAa,EAAE,MAAM,KAAKL,gBAAL,CAAsB,KAAtB,CAFvB;AAGE,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC;AAHzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAK,QAAA,SAAS,EAAEK,OAAO,CAAClB,OAAxB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAEkB,OAAO,CAACZ,gBAAxB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAEY,OAAO,CAACX,OAAxB;AAAA,sBACG,KAAKI,KAAL,CAAWS;AADd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAhCqD,CADlC,CAAxB;AAqCA,eAAeZ,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles, WithStyles, Theme } from \"@material-ui/core/styles\";\nimport NavBar from \"./NavBar\";\nimport TopBar from \"../TopBar\";\nimport IPage from \"../../classes/IPage\";\n// Theme-dependent styles\n// createStyles is just the identity function; it doesn't \"do anything\" at runtime, just helps guide type inference at compile time.\nconst styles = (theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n});\n\ninterface DashboardState {\n  isMobileNavOpen: boolean\n}\n\ninterface DashboardProps extends WithStyles<typeof styles> {\n  pages: IPage[];\n  children?: React.ReactNode\n}\n\nconst DashboardLayout = withStyles(styles, { withTheme: true })(\n  class extends Component<DashboardProps, DashboardState> {\n    constructor(props: DashboardProps) {\n      super(props);\n      this.state = {\n        isMobileNavOpen: false\n      }\n    }\n\n    setMobileNavOpen(isNavOpen: boolean) {\n      this.setState({ isMobileNavOpen: isNavOpen });\n    }\n\n    render() {\n      const { classes } = this.props;\n\n      return (\n        <div className={classes.root}>\n          <TopBar onMobileNavOpen={() => this.setMobileNavOpen(true)} />\n          <NavBar\n            pages={this.props.pages}\n            onMobileClose={() => this.setMobileNavOpen(false)}\n            openMobile={this.state.isMobileNavOpen}\n          />\n          <div className={classes.wrapper}>\n            <div className={classes.contentContainer}>\n              <div className={classes.content}>\n                {this.props.children}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n);\n\nexport default DashboardLayout;\n"]},"metadata":{},"sourceType":"module"}