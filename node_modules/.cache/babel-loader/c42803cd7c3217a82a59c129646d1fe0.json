{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\DataGrid\\\\index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DataGrid, GridOverlay } from \"@material-ui/data-grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiDataGrid-window\": {\n      position: \"relative !important\",\n      top: \"0 !important\"\n    },\n    \"& .MuiDataGrid-viewport, .rendering-zone, .MuiDataGrid-row\": {\n      maxHeight: \"none !important\"\n    },\n    \"& .MuiDataGrid-main > div:nth-child(2):not(.MuiDataGrid-overlay) > div\": {\n      height: \"auto !important\"\n    },\n    \"& .MuiDataGrid-columnsContainer\": {\n      backgroundColor: theme.palette.type === \"light\" ? \"#fafafa\" : \"#1d1d1d\",\n      position: \"relative !important\"\n    },\n    \"& .MuiDataGrid-colCellWrapper\": {\n      flex: 1\n    },\n    \"& .MuiDataGrid-colCell\": {\n      padding: \"10px 16px\",\n      minHeight: 56\n    },\n    \"& .MuiDataGrid-colCell:not(:last-child)\": {\n      borderRight: `1px solid ${theme.palette.type === \"light\" ? \"#f0f0f0\" : \"#303030\"}`\n    },\n    \"& .MuiDataGrid-colCellTitle\": {\n      whiteSpace: \"normal !important\",\n      lineHeight: 1.5,\n      wordBreak: \"break-word\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    \"& .MuiDataGrid-cell\": {\n      borderColor: `${theme.palette.type === \"light\" ? \"#f0f0f0\" : \"#303030\"}`,\n      whiteSpace: \"normal !important\",\n      lineHeight: \"1.5 !important\",\n      wordBreak: \"break-word\",\n      alignItems: \"center\",\n      display: \"flex\",\n      padding: \"10px 16px\",\n      maxHeight: \"none !important\"\n    },\n    \"& .MuiDataGrid-columnSeparator\": {\n      display: \"none\"\n    },\n    \"& .MuiDataGrid-footer\": {\n      padding: 15,\n      position: \"relative !important\"\n    },\n    \"& .MuiDataGrid-overlay\": {\n      backgroundColor: \"#FFFFFF\"\n    },\n    \"& .text-center\": {\n      justifyContent: \"center\"\n    },\n    \"& .text-left\": {\n      textAlign: \"left\"\n    },\n    \"& .gridbutton\": {\n      color: \"#FFFFFF\",\n      borderRadius: 5,\n      padding: 5,\n      margin: 5\n    },\n    \"& .btnEdit\": {\n      backgroundColor: \"#3F51B5\"\n    },\n    \"& .btnEdit:hover\": {\n      backgroundColor: \"#1A237E\"\n    },\n    \"& .btnDelete\": {\n      backgroundColor: \"#E65100\"\n    },\n    \"& .btnDelete:hover\": {\n      backgroundColor: \"#BF360C\"\n    },\n    \"& .btnEdit.Mui-disabled, .btnDelete.Mui-disabled\": {\n      background: \"none\",\n      color: \"#BDBDBD\"\n    }\n  },\n  norecord: {\n    padding: theme.spacing(1),\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nconst GridView = ({\n  columns,\n  rows\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles();\n\n  function CustomNoRowsOverlay() {\n    return /*#__PURE__*/_jsxDEV(GridOverlay, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.norecord,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/static/images/norecordfound.png\",\n          alt: \"No Records Available.\",\n          style: {\n            maxHeight: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n  function CustomPagination(props) {\n    _s();\n\n    const {\n      state,\n      api\n    } = props;\n    let currentPage = state.pagination.page + 1;\n    useEffect(() => {\n      if (state.pagination.page >= state.pagination.pageCount) {\n        currentPage = state.pagination.page;\n        api.current.setPage(currentPage - 1);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Pagination, {\n      className: classes.root,\n      color: \"primary\",\n      variant: \"outlined\",\n      shape: \"rounded\",\n      page: currentPage,\n      count: state.pagination.pageCount,\n      onChange: (event, value) => {\n        api.current.setPage(value - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(CustomPagination, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(DataGrid, {\n    className: classes.root,\n    autoHeight: true,\n    disableColumnMenu: true,\n    disableColumnSelector: true,\n    disableSelectionOnClick: true,\n    showCellRightBorder: true,\n    showColumnRightBorder: true,\n    hideFooter: rows.length > 0 ? false : true,\n    pageSize: 10,\n    components: {\n      Pagination: CustomPagination,\n      NoRowsOverlay: CustomNoRowsOverlay\n    },\n    getRowId: row => row._id,\n    rows: rows,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GridView, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = GridView;\nexport default GridView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridView\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/DataGrid/index.tsx"],"names":["useEffect","makeStyles","DataGrid","GridOverlay","Pagination","useStyles","theme","root","position","top","maxHeight","height","backgroundColor","palette","type","flex","padding","minHeight","borderRight","whiteSpace","lineHeight","wordBreak","display","alignItems","borderColor","justifyContent","textAlign","color","borderRadius","margin","background","norecord","spacing","GridView","columns","rows","classes","CustomNoRowsOverlay","CustomPagination","props","state","api","currentPage","pagination","page","pageCount","current","setPage","event","value","length","NoRowsOverlay","row","_id"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n  DataGrid,\r\n  GridOverlay,\r\n  GridBaseComponentProps,\r\n  GridColDef,\r\n} from \"@material-ui/data-grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    \"& .MuiDataGrid-window\": {\r\n      position: \"relative !important\",\r\n      top: \"0 !important\",\r\n    },\r\n    \"& .MuiDataGrid-viewport, .rendering-zone, .MuiDataGrid-row\": {\r\n      maxHeight: \"none !important\",\r\n    },\r\n    \"& .MuiDataGrid-main > div:nth-child(2):not(.MuiDataGrid-overlay) > div\": {\r\n      height: \"auto !important\",\r\n    },\r\n    \"& .MuiDataGrid-columnsContainer\": {\r\n      backgroundColor: theme.palette.type === \"light\" ? \"#fafafa\" : \"#1d1d1d\",\r\n      position: \"relative !important\",\r\n    },\r\n    \"& .MuiDataGrid-colCellWrapper\": {\r\n      flex: 1,\r\n    },\r\n    \"& .MuiDataGrid-colCell\": {\r\n      padding: \"10px 16px\",\r\n      minHeight: 56,\r\n    },\r\n    \"& .MuiDataGrid-colCell:not(:last-child)\": {\r\n      borderRight: `1px solid ${\r\n        theme.palette.type === \"light\" ? \"#f0f0f0\" : \"#303030\"\r\n      }`,\r\n    },\r\n    \"& .MuiDataGrid-colCellTitle\": {\r\n      whiteSpace: \"normal !important\",\r\n      lineHeight: 1.5,\r\n      wordBreak: \"break-word\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      borderColor: `${theme.palette.type === \"light\" ? \"#f0f0f0\" : \"#303030\"}`,\r\n      whiteSpace: \"normal !important\",\r\n      lineHeight: \"1.5 !important\",\r\n      wordBreak: \"break-word\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      padding: \"10px 16px\",\r\n      maxHeight: \"none !important\",\r\n    },\r\n    \"& .MuiDataGrid-columnSeparator\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .MuiDataGrid-footer\": {\r\n      padding: 15,\r\n      position: \"relative !important\",\r\n    },\r\n    \"& .MuiDataGrid-overlay\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n    \"& .text-center\": {\r\n      justifyContent: \"center\",\r\n    },\r\n    \"& .text-left\": {\r\n      textAlign: \"left\",\r\n    },\r\n    \"& .gridbutton\": {\r\n      color: \"#FFFFFF\",\r\n      borderRadius: 5,\r\n      padding: 5,\r\n      margin: 5,\r\n    },\r\n    \"& .btnEdit\": {\r\n      backgroundColor: \"#3F51B5\",\r\n    },\r\n    \"& .btnEdit:hover\": {\r\n      backgroundColor: \"#1A237E\",\r\n    },\r\n    \"& .btnDelete\": {\r\n      backgroundColor: \"#E65100\",\r\n    },\r\n    \"& .btnDelete:hover\": {\r\n      backgroundColor: \"#BF360C\",\r\n    },\r\n    \"& .btnEdit.Mui-disabled, .btnDelete.Mui-disabled\": {\r\n      background: \"none\",\r\n      color: \"#BDBDBD\",\r\n    },\r\n  },\r\n  norecord: {\r\n    padding: theme.spacing(1),\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\ninterface DataGridProps {\r\n  columns: GridColDef[];\r\n  rows: any;\r\n}\r\n\r\nconst GridView = ({ columns, rows }: DataGridProps) => {\r\n  const classes = useStyles();\r\n\r\n  function CustomNoRowsOverlay() {\r\n    return (\r\n      <GridOverlay className={classes.root}>\r\n        <div className={classes.norecord}>\r\n          <img\r\n            src=\"/static/images/norecordfound.png\"\r\n            alt=\"No Records Available.\"\r\n            style={{ maxHeight: 100 }}\r\n          />\r\n        </div>\r\n      </GridOverlay>\r\n    );\r\n  }\r\n\r\n  function CustomPagination(props: GridBaseComponentProps) {\r\n    const { state, api } = props;\r\n    let currentPage = state.pagination.page + 1;\r\n\r\n    useEffect(() => {\r\n      if (state.pagination.page >= state.pagination.pageCount) {\r\n        currentPage = state.pagination.page;\r\n        api.current.setPage(currentPage - 1);\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Pagination\r\n        className={classes.root}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n        page={currentPage}\r\n        count={state.pagination.pageCount}\r\n        onChange={(event, value) => {\r\n          api.current.setPage(value - 1);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataGrid\r\n      className={classes.root}\r\n      autoHeight={true}\r\n      disableColumnMenu={true}\r\n      disableColumnSelector={true}\r\n      disableSelectionOnClick={true}\r\n      showCellRightBorder={true}\r\n      showColumnRightBorder={true}\r\n      hideFooter={rows.length > 0 ? false : true}\r\n      pageSize={10}\r\n      components={{\r\n        Pagination: CustomPagination,\r\n        NoRowsOverlay: CustomNoRowsOverlay,\r\n      }}\r\n      getRowId={(row) => row._id}\r\n      rows={rows}\r\n      columns={columns}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GridView;\r\n"]},"metadata":{},"sourceType":"module"}