{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\Auth\\\\ResetPassword.tsx\";\nimport { Component } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Box, Button, Container, Link, TextField, Typography } from \"@material-ui/core\";\nimport { PROJECT_PATHS } from \"../../shared/constants\";\nimport MainPage from \"../Page/MainPage\";\nimport { resetPasswordRequest } from \"../../services/Auth\";\nimport snackbarAlert from \"../SnackbarAlert/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    var _PROJECT_PATHS$Auth$f2;\n\n    super(props);\n\n    this.handleSubmit = async (values, {\n      resetForm\n    }) => {\n      try {\n        const params = this.props.match.params;\n        const response = await resetPasswordRequest(params.id, values.password);\n\n        if (response) {\n          if (response.Status.ResponseCode == 200) {\n            var _PROJECT_PATHS$Auth$f;\n\n            snackbarAlert.success(\"Password updated successfully! Please sign in with new password.\");\n            resetForm();\n            const loginPath = (_PROJECT_PATHS$Auth$f = PROJECT_PATHS.Auth.find(x => x.pagename === 'landing')) === null || _PROJECT_PATHS$Auth$f === void 0 ? void 0 : _PROJECT_PATHS$Auth$f.path;\n            this.props.history.push(this.state.loginPath);\n          } else {\n            snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n          }\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n        }\n      } catch (error) {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    };\n\n    this.validationSchema = Yup.object().shape({\n      password: Yup.string().min(7, 'Password should be minimum 7 characters!').max(100, 'Password should be maximum 100 characters!').required('Password is required!'),\n      confirmpassword: Yup.string().required(\"Confirm passsword is required!\").test('passwords-match', 'Passwords must match!', function (value) {\n        return this.parent.password === value;\n      })\n    });\n    this.state = {\n      loginPath: (_PROJECT_PATHS$Auth$f2 = PROJECT_PATHS.Auth.find(x => x.pagename === 'landing')) === null || _PROJECT_PATHS$Auth$f2 === void 0 ? void 0 : _PROJECT_PATHS$Auth$f2.path\n    };\n  }\n\n  render() {\n    const login = PROJECT_PATHS.Auth.find(x => x.pagename === 'landing');\n    return /*#__PURE__*/_jsxDEV(MainPage, {\n      title: \"Reset Password\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        padding: 2,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"maincontent-box\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              className: \"boxtitle\",\n              variant: \"h2\",\n              children: \"Reset Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              variant: \"body2\",\n              children: \"Please enter a new password to reset.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              password: '',\n              confirmpassword: ''\n            },\n            validationSchema: this.validationSchema,\n            onSubmit: this.handleSubmit,\n            children: ({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"New Password\",\n                margin: \"normal\",\n                name: \"password\",\n                type: \"password\",\n                value: values.password,\n                variant: \"outlined\",\n                inputProps: {\n                  maxLength: 100\n                },\n                onBlur: handleBlur,\n                onChange: handleChange,\n                error: Boolean(touched.password && errors.password),\n                helperText: touched.password && errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Confirm Password\",\n                margin: \"normal\",\n                name: \"confirmpassword\",\n                type: \"password\",\n                inputProps: {\n                  maxLength: 100\n                },\n                value: values.confirmpassword,\n                variant: \"outlined\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                error: Boolean(touched.confirmpassword && errors.confirmpassword),\n                helperText: touched.confirmpassword && errors.confirmpassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                my: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  disabled: isSubmitting,\n                  fullWidth: true,\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: isSubmitting ? \"Please wait...\" : \"Reset Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body1\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  component: RouterLink,\n                  to: this.state.loginPath,\n                  variant: \"h6\",\n                  children: \"GO TO SIGN IN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/Auth/ResetPassword.tsx"],"names":["Component","Link","RouterLink","Yup","Formik","Box","Button","Container","TextField","Typography","PROJECT_PATHS","MainPage","resetPasswordRequest","snackbarAlert","ResetPassword","constructor","props","handleSubmit","values","resetForm","params","match","response","id","password","Status","ResponseCode","success","loginPath","Auth","find","x","pagename","path","history","push","state","error","validationSchema","object","shape","string","min","max","required","confirmpassword","test","value","parent","render","login","errors","handleBlur","handleChange","isSubmitting","touched","maxLength","Boolean"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { Link as RouterLink, RouteComponentProps } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport { PROJECT_PATHS } from \"../../shared/constants\";\nimport MainPage from \"../Page/MainPage\";\nimport { resetPasswordRequest } from \"../../services/Auth\";\nimport snackbarAlert from \"../SnackbarAlert/\";\n\nexport interface IFormValues {\n  password: string;\n  confirmpassword: string;\n}\n\nexport interface IParams {\n  id: string;\n}\n\nexport interface IState {\n  loginPath: string;\n}\n\nclass ResetPassword extends Component<RouteComponentProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loginPath: PROJECT_PATHS.Auth.find(x => x.pagename === 'landing')?.path as string\n    }\n  }\n\n  handleSubmit = async (values: IFormValues, { resetForm }: any) => {\n    try {\n      const params = this.props.match.params as IParams;\n\n      const response = await resetPasswordRequest(params.id, values.password);\n      if (response) {\n        if (response.Status.ResponseCode == 200) {\n          snackbarAlert.success(\"Password updated successfully! Please sign in with new password.\");\n          resetForm();\n          const loginPath = PROJECT_PATHS.Auth.find(x => x.pagename === 'landing')?.path as string;\n          this.props.history.push(this.state.loginPath);\n        }\n        else {\n          snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n        }\n      }\n      else {\n        snackbarAlert.error(\"Oops! Something Broke! Please try again.\");\n      }\n    }\n    catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  validationSchema = Yup.object().shape({\n    password: Yup.string()\n      .min(7, 'Password should be minimum 7 characters!')\n      .max(100, 'Password should be maximum 100 characters!')\n      .required('Password is required!'),\n    confirmpassword: Yup.string()\n      .required(\"Confirm passsword is required!\")\n      .test('passwords-match', 'Passwords must match!', function (value) {\n        return this.parent.password === value\n      })\n  });\n\n  render() {\n    const login = PROJECT_PATHS.Auth.find(x => x.pagename === 'landing');\n    return (\n      <MainPage title=\"Reset Password\">\n        <Box display=\"flex\" flexDirection=\"column\" height=\"100%\" justifyContent=\"center\" padding={2}>\n          <Container className=\"maincontent-box\">\n            <Box mb={3}>\n              <Typography color=\"textPrimary\" className=\"boxtitle\" variant=\"h2\">Reset Your Password</Typography>\n              <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">Please enter a new password to reset.</Typography>\n            </Box>\n            <Formik\n              initialValues={{\n                password: '',\n                confirmpassword: ''\n              }}\n              validationSchema={this.validationSchema}\n              onSubmit={this.handleSubmit}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    fullWidth\n                    label=\"New Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                    inputProps={{ maxLength: 100 }}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    error={Boolean(touched.password && errors.password)}\n                    helperText={touched.password && errors.password}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Confirm Password\"\n                    margin=\"normal\"\n                    name=\"confirmpassword\"\n                    type=\"password\"\n                    inputProps={{ maxLength: 100 }}\n                    value={values.confirmpassword}\n                    variant=\"outlined\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    error={Boolean(touched.confirmpassword && errors.confirmpassword)}\n                    helperText={touched.confirmpassword && errors.confirmpassword}\n                  />\n                  <Box my={2}>\n                    <Button\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      {(isSubmitting) ? \"Please wait...\" : \"Reset Password\"}\n                    </Button>\n                  </Box>\n                  <Typography color=\"textSecondary\" variant=\"body1\" >\n                    <Link component={RouterLink} to={this.state.loginPath} variant=\"h6\">\n                      GO TO SIGN IN\n                  </Link>\n                  </Typography>\n                </form>\n              )}\n            </Formik>\n          </Container>\n        </Box>\n      </MainPage>\n    );\n  }\n};\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}