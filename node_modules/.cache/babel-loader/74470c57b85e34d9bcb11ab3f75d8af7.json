{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\Admin\\\\User\\\\ManageUser.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Avatar, Box, Button, Card, Grid, InputAdornment, SvgIcon, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { getRolesRequest, getReportingManagersRequest, getUsersRequest, deleteUserRequest } from \"../../../services/Admin\";\nimport SessionContext from \"../../../context/SessionContext\";\nimport { PROJECT_PATHS } from \"../../../shared/constants\";\nimport getInitials from \"../../../utils/getInitials\";\nimport moment from \"moment\";\nimport DashboardPage from \"../../Page/DashboardPage\";\nimport GridView from \"../../DataGrid\";\nimport DialogBox from \"../../DialogBox\";\nimport snackbarAlert from \"../../SnackbarAlert\";\nimport Spinner from \"../../Spinner\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  mbottom: {\n    marginBottom: theme.spacing(3)\n  },\n  avatar: {\n    cursor: \"pointer\",\n    width: 40,\n    height: 40\n  }\n}));\nlet filters = {\n  RoleId: \"\",\n  ReportingManagerId: \"\",\n  SearchStr: \"\"\n};\n\nconst ManageUser = () => {\n  _s();\n\n  var _PROJECT_PATHS$Admin$, _PROJECT_PATHS$Admin$2;\n\n  const classes = useStyles();\n  const loggedInUser = useContext(SessionContext).user;\n  const initialDialogState = {\n    open: false,\n    title: \"Delete User\",\n    description: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Are you sure you want to delete this user?\"\n    }, void 0, false),\n    UserId: \"\"\n  };\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [reportingmanagers, setReportingManagers] = useState([]);\n  const [submmitting, setSubmmitting] = useState(false);\n  const [dialog, setDialog] = useState(initialDialogState);\n  const addUserPath = (_PROJECT_PATHS$Admin$ = PROJECT_PATHS.Admin.find(x => x.pagename === \"adduser\")) === null || _PROJECT_PATHS$Admin$ === void 0 ? void 0 : _PROJECT_PATHS$Admin$.path;\n  const editUserPath = (_PROJECT_PATHS$Admin$2 = PROJECT_PATHS.Admin.find(x => x.pagename === \"edituser\")) === null || _PROJECT_PATHS$Admin$2 === void 0 ? void 0 : _PROJECT_PATHS$Admin$2.path;\n  const columns = [{\n    field: \"Photo\",\n    headerName: \"Photo\",\n    headerAlign: \"center\",\n    cellClassName: \"text-center\",\n    width: 70,\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Avatar, {\n      className: classes.avatar,\n      src: params.row.ProfilePhoto,\n      children: getInitials(params.row.FirstName + \" \" + params.row.LastName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"Name\",\n    headerName: \"Name\",\n    width: 110,\n    valueGetter: params => `${params.row.FirstName} ${params.row.LastName}`\n  }, {\n    field: \"Email\",\n    headerName: \"Email\",\n    flex: 1\n  }, {\n    field: \"Phone\",\n    headerName: \"Phone\",\n    width: 110\n  }, {\n    field: \"EmployeeCode\",\n    headerName: \"Emp. Code\",\n    width: 100\n  }, {\n    field: \"Role\",\n    headerName: \"Role\",\n    width: 100,\n    valueGetter: params => `${params.row.Role ? params.row.Role.RoleName : \"\"}`\n  }, {\n    field: \"ReportingManager\",\n    headerName: \"Reporting Manager\",\n    width: 120,\n    headerClassName: \"text-left\",\n    valueGetter: params => `${params.row.ReportingManager ? `${params.row.ReportingManager.FirstName} ${params.row.ReportingManager.LastName}` : \"\"}`\n  }, {\n    field: \"ReminderTime\",\n    headerName: \"Reminder Time\",\n    width: 115,\n    headerClassName: \"text-left\",\n    valueFormatter: params => convertTime24to12(`${params.row.ReminderTime}`)\n  }, {\n    field: \"CreatedDate\",\n    headerName: \"Registered Date\",\n    type: \"date\",\n    width: 125,\n    headerClassName: \"text-left\",\n    valueFormatter: params => moment(`${params.row.CreatedDate}`).format(\"YYYY-MM-DD\")\n  }, {\n    field: \" \",\n    headerName: \" \",\n    cellClassName: \"text-center\",\n    width: 120,\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(loggedInUser.IsHost || loggedInUser.IsSuperAdmin && !params.row.IsSuperAdmin || loggedInUser._id === params.row._id || loggedInUser._id === params.row.CreatedBy || params.row.Role && params.row.Role.RoleName.toLowerCase() !== \"admin\") && /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        className: \"gridbutton btnEdit\",\n        \"aria-label\": \"edit\",\n        disabled: submmitting,\n        href: editUserPath.replace(\":id\", `${params.row._id}`),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), (loggedInUser.IsHost || loggedInUser.IsSuperAdmin && loggedInUser._id !== params.row._id && !params.row.IsSuperAdmin || loggedInUser._id === params.row.CreatedBy || params.row.Role && params.row.Role.RoleName.toLowerCase() !== \"admin\") && /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        className: \"gridbutton btnDelete\",\n        \"aria-label\": \"delete\",\n        disabled: submmitting,\n        onClick: () => showDialogBox(`${params.row._id}`, `${params.row.FirstName} ${params.row.LastName}`),\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }];\n\n  const convertTime24to12 = time => {\n    let convertedTime = time;\n\n    if (time) {\n      let [hours, minutes] = time.split(\":\").map(Number);\n      const AmOrPm = hours >= 12 ? \"PM\" : \"AM\";\n      hours = hours % 12 || 12;\n      convertedTime = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \" \" + AmOrPm;\n    }\n\n    return convertedTime;\n  };\n\n  const showDialogBox = (UserId, Name) => {\n    let popupdesc = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Are you sure you want to delete this user - \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"\\\"\", Name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 53\n      }, this), \"?\"]\n    }, void 0, true);\n\n    setDialog({ ...dialog,\n      open: true,\n      description: popupdesc,\n      UserId: UserId\n    });\n  };\n\n  const closeDialogBox = () => {\n    setDialog({ ...dialog,\n      open: false,\n      UserId: \"\"\n    });\n  };\n\n  const getRoles = async () => {\n    try {\n      const response = await getRolesRequest();\n\n      if (response && response.Status.ResponseCode == 200) {\n        const drp_roles = response.Roles;\n        setRoles(drp_roles);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const getReportingManagers = async () => {\n    try {\n      const response = await getReportingManagersRequest();\n\n      if (response && response.Status.ResponseCode == 200) {\n        const drp_users = response.Users;\n        setReportingManagers(drp_users);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      const response = await getUsersRequest();\n\n      if (response && response.Status.ResponseCode == 200) {\n        const gridrows = response.Users;\n        setRows(gridrows);\n        setOriginalData(gridrows);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const deleteUser = async () => {\n    try {\n      const UserId = dialog.UserId;\n\n      if (UserId) {\n        const response = await deleteUserRequest(UserId);\n\n        if (response && response.Status.ResponseCode == 200) {\n          await getReportingManagers();\n          await getUsers();\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke!\");\n        }\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n\n    setSubmmitting(false);\n    closeDialogBox();\n  };\n\n  const handleSearchChange = () => {\n    let gridrows = originalData;\n\n    if (filters.RoleId) {\n      gridrows = gridrows.filter(item => item.Role._id === filters.RoleId);\n    }\n\n    if (filters.ReportingManagerId) {\n      gridrows = gridrows.filter(item => item.ReportingManager._id === filters.ReportingManagerId);\n    }\n\n    if (filters.SearchStr) {\n      gridrows = gridrows.filter(item => item.FirstName.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1 || item.LastName.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1 || item.Email.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1 || item.Phone.toString().indexOf(filters.SearchStr.toLowerCase()) > -1 || item.EmployeeCode.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) > -1);\n    }\n\n    setRows(gridrows);\n  };\n\n  useEffect(() => {\n    (async function execPreLoadFunctions() {\n      await getRoles();\n      await getReportingManagers();\n      await getUsers();\n      setLoading(false);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardPage, {\n    title: \"Manage Users\",\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            style: {\n              textAlign: \"left\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"large\",\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 30\n              }, this),\n              href: addUserPath,\n              children: \"Register User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              fullWidth: true,\n              size: \"small\",\n              label: \"Select Role\",\n              variant: \"outlined\",\n              SelectProps: {\n                native: true\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => {\n                filters.RoleId = e.target.value;\n                handleSearchChange();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"- None -\"\n              }, \"-1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), roles.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option._id,\n                children: option.RoleName\n              }, option._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              fullWidth: true,\n              size: \"small\",\n              label: \"Select Reporting Manager\",\n              variant: \"outlined\",\n              SelectProps: {\n                native: true\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => {\n                filters.ReportingManagerId = e.target.value;\n                handleSearchChange();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"- None -\"\n              }, \"-1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this), reportingmanagers.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option._id,\n                children: option.Name\n              }, option._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            sm: 6,\n            xs: 12,\n            className: classes.mbottom,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              size: \"small\",\n              placeholder: \"Search...\",\n              variant: \"outlined\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                    fontSize: \"small\",\n                    color: \"disabled\",\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)\n              },\n              onChange: e => {\n                filters.SearchStr = e.target.value;\n                handleSearchChange();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            minWidth: 1170,\n            children: /*#__PURE__*/_jsxDEV(GridView, {\n              columns: columns,\n              rows: rows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogBox, {\n          open: dialog.open,\n          title: dialog.title,\n          description: dialog.description,\n          isSubmitting: submmitting,\n          onDialogAction: isAgree => {\n            if (isAgree) {\n              setSubmmitting(true);\n              deleteUser();\n            } else {\n              closeDialogBox();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageUser, \"IOeyb1hup8oOr4fLyNAyBwB9mEI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ManageUser;\nexport default ManageUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageUser\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/Admin/User/ManageUser.tsx"],"names":["useContext","useState","useEffect","PerfectScrollbar","Avatar","Box","Button","Card","Grid","InputAdornment","SvgIcon","TextField","makeStyles","IconButton","AddIcon","EditIcon","DeleteIcon","SearchIcon","getRolesRequest","getReportingManagersRequest","getUsersRequest","deleteUserRequest","SessionContext","PROJECT_PATHS","getInitials","moment","DashboardPage","GridView","DialogBox","snackbarAlert","Spinner","useStyles","theme","mbottom","marginBottom","spacing","avatar","cursor","width","height","filters","RoleId","ReportingManagerId","SearchStr","ManageUser","classes","loggedInUser","user","initialDialogState","open","title","description","UserId","loading","setLoading","rows","setRows","originalData","setOriginalData","roles","setRoles","reportingmanagers","setReportingManagers","submmitting","setSubmmitting","dialog","setDialog","addUserPath","Admin","find","x","pagename","path","editUserPath","columns","field","headerName","headerAlign","cellClassName","sortable","renderCell","params","row","ProfilePhoto","FirstName","LastName","valueGetter","flex","Role","RoleName","headerClassName","ReportingManager","valueFormatter","convertTime24to12","ReminderTime","type","CreatedDate","format","IsHost","IsSuperAdmin","_id","CreatedBy","toLowerCase","replace","showDialogBox","time","convertedTime","hours","minutes","split","map","Number","AmOrPm","Name","popupdesc","closeDialogBox","getRoles","response","Status","ResponseCode","drp_roles","Roles","error","getReportingManagers","drp_users","Users","getUsers","gridrows","deleteUser","handleSearchChange","filter","item","indexOf","Email","Phone","toString","EmployeeCode","execPreLoadFunctions","textAlign","native","shrink","e","target","value","option","startAdornment","isAgree"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Grid,\n  InputAdornment,\n  SvgIcon,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  GridColDef,\n  GridCellParams,\n  GridValueGetterParams,\n  GridValueFormatterParams,\n} from \"@material-ui/data-grid\";\nimport {\n  getRolesRequest,\n  getReportingManagersRequest,\n  getUsersRequest,\n  deleteUserRequest,\n} from \"../../../services/Admin\";\nimport SessionContext from \"../../../context/SessionContext\";\nimport { PROJECT_PATHS } from \"../../../shared/constants\";\nimport { IUser } from \"../../../classes/IUser\";\nimport { IUserDropdown, IUserShort } from \"../../../classes/IUserShort\";\nimport IRole from \"../../../classes/IRole\";\nimport ILoginUser from \"../../../classes/ILoginUser\";\nimport getInitials from \"../../../utils/getInitials\";\nimport moment from \"moment\";\nimport DashboardPage from \"../../Page/DashboardPage\";\nimport GridView from \"../../DataGrid\";\nimport DialogBox from \"../../DialogBox\";\nimport snackbarAlert from \"../../SnackbarAlert\";\nimport Spinner from \"../../Spinner\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mbottom: {\n    marginBottom: theme.spacing(3),\n  },\n  avatar: {\n    cursor: \"pointer\",\n    width: 40,\n    height: 40,\n  },\n}));\n\nlet filters = {\n  RoleId: \"\",\n  ReportingManagerId: \"\",\n  SearchStr: \"\",\n};\n\nconst ManageUser = () => {\n  const classes = useStyles();\n  const loggedInUser = useContext(SessionContext).user as ILoginUser;\n\n  const initialDialogState = {\n    open: false,\n    title: \"Delete User\",\n    description: <>Are you sure you want to delete this user?</>,\n    UserId: \"\",\n  };\n\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([] as IUser[]);\n  const [originalData, setOriginalData] = useState([] as IUser[]);\n  const [roles, setRoles] = useState([] as IRole[]);\n  const [reportingmanagers, setReportingManagers] = useState(\n    [] as IUserDropdown[]\n  );\n  const [submmitting, setSubmmitting] = useState(false);\n  const [dialog, setDialog] = useState(initialDialogState);\n\n  const addUserPath = PROJECT_PATHS.Admin.find((x) => x.pagename === \"adduser\")\n    ?.path as string;\n  const editUserPath = PROJECT_PATHS.Admin.find(\n    (x) => x.pagename === \"edituser\"\n  )?.path as string;\n\n  const columns: GridColDef[] = [\n    {\n      field: \"Photo\",\n      headerName: \"Photo\",\n      headerAlign: \"center\",\n      cellClassName: \"text-center\",\n      width: 70,\n      sortable: false,\n      renderCell: (params: GridCellParams) => (\n        <Avatar className={classes.avatar} src={params.row.ProfilePhoto}>\n          {getInitials(params.row.FirstName + \" \" + params.row.LastName)}\n        </Avatar>\n      ),\n    },\n    {\n      field: \"Name\",\n      headerName: \"Name\",\n      width: 110,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.FirstName} ${params.row.LastName}`,\n    },\n    {\n      field: \"Email\",\n      headerName: \"Email\",\n      flex: 1,\n    },\n    {\n      field: \"Phone\",\n      headerName: \"Phone\",\n      width: 110,\n    },\n    {\n      field: \"EmployeeCode\",\n      headerName: \"Emp. Code\",\n      width: 100,\n    },\n    {\n      field: \"Role\",\n      headerName: \"Role\",\n      width: 100,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.Role ? params.row.Role.RoleName : \"\"}`,\n    },\n    {\n      field: \"ReportingManager\",\n      headerName: \"Reporting Manager\",\n      width: 120,\n      headerClassName: \"text-left\",\n      valueGetter: (params: GridValueGetterParams) =>\n        `${\n          params.row.ReportingManager\n            ? `${params.row.ReportingManager.FirstName} ${params.row.ReportingManager.LastName}`\n            : \"\"\n        }`,\n    },\n    {\n      field: \"ReminderTime\",\n      headerName: \"Reminder Time\",\n      width: 115,\n      headerClassName: \"text-left\",\n      valueFormatter: (params: GridValueFormatterParams) =>\n        convertTime24to12(`${params.row.ReminderTime}`),\n    },\n    {\n      field: \"CreatedDate\",\n      headerName: \"Registered Date\",\n      type: \"date\",\n      width: 125,\n      headerClassName: \"text-left\",\n      valueFormatter: (params: GridValueFormatterParams) =>\n        moment(`${params.row.CreatedDate}`).format(\"YYYY-MM-DD\"),\n    },\n    {\n      field: \" \",\n      headerName: \" \",\n      cellClassName: \"text-center\",\n      width: 120,\n      sortable: false,\n      renderCell: (params: GridCellParams) => (\n        <>\n          {(loggedInUser.IsHost ||\n            (loggedInUser.IsSuperAdmin && !params.row.IsSuperAdmin) ||\n            loggedInUser._id === params.row._id ||\n            loggedInUser._id === params.row.CreatedBy ||\n            (params.row.Role &&\n              params.row.Role.RoleName.toLowerCase() !== \"admin\")) && (\n            <IconButton\n              size=\"small\"\n              className=\"gridbutton btnEdit\"\n              aria-label=\"edit\"\n              disabled={submmitting}\n              href={editUserPath.replace(\":id\", `${params.row._id}`)}\n            >\n              <EditIcon />\n            </IconButton>\n          )}\n          {(loggedInUser.IsHost ||\n            (loggedInUser.IsSuperAdmin &&\n              loggedInUser._id !== params.row._id &&\n              !params.row.IsSuperAdmin) ||\n            loggedInUser._id === params.row.CreatedBy ||\n            (params.row.Role &&\n              params.row.Role.RoleName.toLowerCase() !== \"admin\")) && (\n            <IconButton\n              size=\"small\"\n              className=\"gridbutton btnDelete\"\n              aria-label=\"delete\"\n              disabled={submmitting}\n              onClick={() =>\n                showDialogBox(\n                  `${params.row._id}`,\n                  `${params.row.FirstName} ${params.row.LastName}`\n                )\n              }\n            >\n              <DeleteIcon />\n            </IconButton>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  const convertTime24to12 = (time: string) => {\n    let convertedTime: string = time;\n    if (time) {\n      let [hours, minutes] = time.split(\":\").map(Number);\n\n      const AmOrPm = hours >= 12 ? \"PM\" : \"AM\";\n      hours = hours % 12 || 12;\n\n      convertedTime =\n        (hours < 10 ? \"0\" + hours : hours) +\n        \":\" +\n        (minutes < 10 ? \"0\" + minutes : minutes) +\n        \" \" +\n        AmOrPm;\n    }\n    return convertedTime;\n  };\n\n  const showDialogBox = (UserId: string, Name: string) => {\n    let popupdesc = (\n      <>\n        Are you sure you want to delete this user - <b>\"{Name}\"</b>?\n      </>\n    );\n    setDialog({\n      ...dialog,\n      open: true,\n      description: popupdesc,\n      UserId: UserId,\n    });\n  };\n\n  const closeDialogBox = () => {\n    setDialog({\n      ...dialog,\n      open: false,\n      UserId: \"\",\n    });\n  };\n\n  const getRoles = async () => {\n    try {\n      const response = await getRolesRequest();\n      if (response && response.Status.ResponseCode == 200) {\n        const drp_roles: IRole[] = response.Roles;\n        setRoles(drp_roles);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const getReportingManagers = async () => {\n    try {\n      const response = await getReportingManagersRequest();\n      if (response && response.Status.ResponseCode == 200) {\n        const drp_users: IUserDropdown[] = response.Users;\n        setReportingManagers(drp_users);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      const response = await getUsersRequest();\n      if (response && response.Status.ResponseCode == 200) {\n        const gridrows: IUser[] = response.Users;\n        setRows(gridrows);\n        setOriginalData(gridrows);\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  const deleteUser = async () => {\n    try {\n      const UserId = dialog.UserId;\n      if (UserId) {\n        const response = await deleteUserRequest(UserId);\n        if (response && response.Status.ResponseCode == 200) {\n          await getReportingManagers();\n          await getUsers();\n        } else {\n          snackbarAlert.error(\"Oops! Something Broke!\");\n        }\n      } else {\n        snackbarAlert.error(\"Oops! Something Broke!\");\n      }\n    } catch (error) {\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n    setSubmmitting(false);\n    closeDialogBox();\n  };\n\n  const handleSearchChange = () => {\n    let gridrows = originalData;\n    if (filters.RoleId) {\n      gridrows = gridrows.filter((item) => item.Role._id === filters.RoleId);\n    }\n\n    if (filters.ReportingManagerId) {\n      gridrows = gridrows.filter(\n        (item) => item.ReportingManager._id === filters.ReportingManagerId\n      );\n    }\n\n    if (filters.SearchStr) {\n      gridrows = gridrows.filter(\n        (item) =>\n          item.FirstName.toLowerCase().indexOf(\n            filters.SearchStr.toLowerCase()\n          ) > -1 ||\n          item.LastName.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) >\n            -1 ||\n          item.Email.toLowerCase().indexOf(filters.SearchStr.toLowerCase()) >\n            -1 ||\n          item.Phone.toString().indexOf(filters.SearchStr.toLowerCase()) > -1 ||\n          item.EmployeeCode.toLowerCase().indexOf(\n            filters.SearchStr.toLowerCase()\n          ) > -1\n      );\n    }\n    setRows(gridrows);\n  };\n\n  useEffect(() => {\n    (async function execPreLoadFunctions() {\n      await getRoles();\n      await getReportingManagers();\n      await getUsers();\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <DashboardPage title=\"Manage Users\">\n      {!loading ? (\n        <>\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                md={3}\n                sm={6}\n                xs={12}\n                className={classes.mbottom}\n                style={{ textAlign: \"left\" }}\n              >\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  href={addUserPath}\n                >\n                  Register User\n                </Button>\n              </Grid>\n              <Grid item md={3} sm={6} xs={12} className={classes.mbottom}>\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Role\"\n                  variant=\"outlined\"\n                  SelectProps={{ native: true }}\n                  InputLabelProps={{ shrink: true }}\n                  onChange={(e) => {\n                    filters.RoleId = e.target.value;\n                    handleSearchChange();\n                  }}\n                >\n                  <option key=\"-1\" value=\"\">\n                    - None -\n                  </option>\n                  {roles.map((option) => (\n                    <option key={option._id} value={option._id}>\n                      {option.RoleName}\n                    </option>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item md={3} sm={6} xs={12} className={classes.mbottom}>\n                <TextField\n                  select\n                  fullWidth\n                  size=\"small\"\n                  label=\"Select Reporting Manager\"\n                  variant=\"outlined\"\n                  SelectProps={{ native: true }}\n                  InputLabelProps={{ shrink: true }}\n                  onChange={(e) => {\n                    filters.ReportingManagerId = e.target.value;\n                    handleSearchChange();\n                  }}\n                >\n                  <option key=\"-1\" value=\"\">\n                    - None -\n                  </option>\n                  {reportingmanagers.map((option) => (\n                    <option key={option._id} value={option._id}>\n                      {option.Name}\n                    </option>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item md={3} sm={6} xs={12} className={classes.mbottom}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  placeholder=\"Search...\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SvgIcon fontSize=\"small\" color=\"disabled\">\n                          <SearchIcon />\n                        </SvgIcon>\n                      </InputAdornment>\n                    ),\n                  }}\n                  onChange={(e) => {\n                    filters.SearchStr = e.target.value;\n                    handleSearchChange();\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n          <Card>\n            <PerfectScrollbar>\n              <Box minWidth={1170}>\n                <GridView columns={columns} rows={rows} />\n              </Box>\n            </PerfectScrollbar>\n            <DialogBox\n              open={dialog.open}\n              title={dialog.title}\n              description={dialog.description}\n              isSubmitting={submmitting}\n              onDialogAction={(isAgree: boolean) => {\n                if (isAgree) {\n                  setSubmmitting(true);\n                  deleteUser();\n                } else {\n                  closeDialogBox();\n                }\n              }}\n            />\n          </Card>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </DashboardPage>\n  );\n};\n\nexport default ManageUser;\n"]},"metadata":{},"sourceType":"module"}