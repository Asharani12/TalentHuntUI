{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\components\\\\MyAccount\\\\MyProfile\\\\LeftProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Divider, makeStyles, Typography } from \"@material-ui/core\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { updateProfilePictureRequest } from \"../../../services/MyAccount\";\nimport SessionContext from \"../../../context/SessionContext\";\nimport snackbarAlert from \"../../SnackbarAlert/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    height: 200,\n    width: 200,\n    [theme.breakpoints.down('xs')]: {\n      height: 100,\n      width: 100\n    }\n  },\n  loadingspan: {\n    width: 200,\n    height: 200,\n    position: 'relative',\n    marginTop: -200,\n    opacity: 0.7,\n    backgroundColor: '#fff',\n    borderRadius: '50%'\n  },\n  loadingimg: {\n    width: 100,\n    marginTop: 50\n  }\n}));\n\nconst LeftProfile = ({\n  UserId,\n  Profile,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    isUploading: false\n  });\n  const context = useContext(SessionContext);\n\n  const handleChange = async e => {\n    try {\n      setState({\n        isUploading: true\n      });\n      let file_list = e.target.files;\n\n      if (file_list && file_list[0]) {\n        const selectedFile = file_list[0];\n        const maxFileSize = 4194304; // 4MB -> 4 * 1024 * 1024 – to check in KB – Kilo Bytes\n\n        if (selectedFile.size > maxFileSize) {\n          setState({\n            isUploading: false\n          });\n          snackbarAlert.error(\"Failed!! Max allowed image size is 4 MB\");\n        } else {\n          const allowedExt = ['png', 'jpg', 'jpeg'];\n          const ext = selectedFile.name.split('.').pop().toLowerCase();\n\n          if (!allowedExt.includes(ext)) {\n            setState({\n              isUploading: false\n            });\n            snackbarAlert.error(\"Failed!! Allowed image with these extentions only : \" + allowedExt.join(', ') + \".\");\n          } else {\n            if (UserId) {\n              const response = await updateProfilePictureRequest(UserId, selectedFile);\n\n              if (response) {\n                if (response.Status.ResponseCode == 200) {\n                  Profile.ProfilePhoto = response.ProfilePhoto;\n                  context.UpdateProfilePicture(response.ProfilePhoto);\n                  snackbarAlert.success(\"Profile picture updated successfully!\");\n                } else {\n                  snackbarAlert.error(\"Oops! Something Broke!\");\n                }\n              } else {\n                snackbarAlert.error(\"Oops! Something Broke!\");\n              }\n            } else {\n              snackbarAlert.error(\"Oops! Something Broke!\");\n            }\n          }\n        }\n      } else {\n        snackbarAlert.error(\"Please select the image to update.\");\n      }\n\n      setState({\n        isUploading: false\n      });\n    } catch (error) {\n      setState({\n        isUploading: false\n      });\n      snackbarAlert.error(\"Oops! Something Broke!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, { ...rest,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          src: Profile.ProfilePhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), state.isUploading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.loadingspan,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/static/images/loader.gif\",\n            className: classes.loadingimg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          gutterBottom: true,\n          variant: \"h3\",\n          children: Profile.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body1\",\n          children: Profile.EmployeeCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ProfilePhoto\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            style: {\n              display: 'none'\n            },\n            id: \"ProfilePhoto\",\n            disabled: state.isUploading,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            fullWidth: true,\n            variant: \"text\",\n            component: \"span\",\n            disabled: state.isUploading,\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 40\n            }, this),\n            children: \"Update Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeftProfile, \"rGHDHKTpWvahT2s72z2IPx+wDDM=\", false, function () {\n  return [useStyles];\n});\n\n_c = LeftProfile;\nexport default LeftProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftProfile\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/components/MyAccount/MyProfile/LeftProfile.tsx"],"names":["useState","useContext","Avatar","Box","Button","Card","CardActions","CardContent","Divider","makeStyles","Typography","CloudUploadIcon","updateProfilePictureRequest","SessionContext","snackbarAlert","useStyles","theme","avatar","height","width","breakpoints","down","loadingspan","position","marginTop","opacity","backgroundColor","borderRadius","loadingimg","LeftProfile","UserId","Profile","rest","classes","state","setState","isUploading","context","handleChange","e","file_list","target","files","selectedFile","maxFileSize","size","error","allowedExt","ext","name","split","pop","toLowerCase","includes","join","response","Status","ResponseCode","ProfilePhoto","UpdateProfilePicture","success","Name","EmployeeCode","display"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport {\n    Avatar,\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    makeStyles,\n    Theme,\n    Typography\n} from \"@material-ui/core\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport IProfile from \"../../../classes/IProfile\";\nimport { updateProfilePictureRequest } from \"../../../services/MyAccount\";\nimport SessionContext from \"../../../context/SessionContext\";\nimport snackbarAlert from \"../../SnackbarAlert/\";\n\ninterface ILeftProfileProps {\n    UserId: string;\n    Profile: IProfile;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    avatar: {\n        height: 200,\n        width: 200,\n        [theme.breakpoints.down('xs')]: {\n            height: 100,\n            width: 100,\n        },\n    },\n    loadingspan: {\n        width: 200,\n        height: 200,\n        position: 'relative',\n        marginTop: -200,\n        opacity: 0.7,\n        backgroundColor: '#fff',\n        borderRadius: '50%'\n    },\n    loadingimg: {\n        width: 100,\n        marginTop: 50,\n    }\n}));\n\nconst LeftProfile = ({ UserId, Profile, ...rest }: ILeftProfileProps) => {\n    const classes = useStyles();\n    const [state, setState] = useState({ isUploading: false });\n    const context = useContext(SessionContext);\n\n    const handleChange = async (e: any) => {\n        try {\n            setState({ isUploading: true });\n            let file_list = e.target.files;\n\n            if (file_list && file_list[0]) {\n                const selectedFile = file_list[0];\n                const maxFileSize: number = 4194304; // 4MB -> 4 * 1024 * 1024 – to check in KB – Kilo Bytes\n\n                if (selectedFile.size > maxFileSize) {\n                    setState({ isUploading: false });\n                    snackbarAlert.error(\"Failed!! Max allowed image size is 4 MB\");\n                }\n                else {\n                    const allowedExt = ['png', 'jpg', 'jpeg'];\n                    const ext = selectedFile.name.split('.').pop().toLowerCase();\n                    if (!allowedExt.includes(ext)) {\n                        setState({ isUploading: false });\n                        snackbarAlert.error(\"Failed!! Allowed image with these extentions only : \" + allowedExt.join(', ') + \".\");\n                    }\n                    else {\n                        if (UserId) {\n                            const response = await updateProfilePictureRequest(UserId, selectedFile);\n                            if (response) {\n                                if (response.Status.ResponseCode == 200) {\n                                    Profile.ProfilePhoto = response.ProfilePhoto;\n                                    context.UpdateProfilePicture(response.ProfilePhoto);\n                                    snackbarAlert.success(\"Profile picture updated successfully!\");\n                                }\n                                else {\n                                    snackbarAlert.error(\"Oops! Something Broke!\");\n                                }\n                            }\n                            else {\n                                snackbarAlert.error(\"Oops! Something Broke!\");\n                            }\n                        }\n                        else {\n                            snackbarAlert.error(\"Oops! Something Broke!\");\n                        }\n                    }\n                }\n            }\n            else {\n                snackbarAlert.error(\"Please select the image to update.\");\n            }\n            setState({ isUploading: false });\n        }\n        catch (error) {\n            setState({ isUploading: false });\n            snackbarAlert.error(\"Oops! Something Broke!\");\n        }\n    }\n\n    return (\n        <Card\n            {...rest}\n        >\n            <CardContent>\n                <Box\n                    alignItems=\"center\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                >\n                    <Avatar\n                        className={classes.avatar}\n                        src={Profile.ProfilePhoto}\n                    />\n                    {(state.isUploading) &&\n                        <span className={classes.loadingspan}>\n                            <img src=\"/static/images/loader.gif\" className={classes.loadingimg} />\n                        </span>\n                    }\n                    <Typography\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"h3\"\n                    >\n                        {Profile.Name}\n                    </Typography>\n                    <Typography\n                        color=\"textSecondary\"\n                        variant=\"body1\"\n                    >\n                        {Profile.EmployeeCode}\n                    </Typography>\n                </Box>\n            </CardContent>\n            <Divider />\n            <Box display=\"flex\" justifyContent=\"center\">\n                <CardActions>\n                    <label htmlFor=\"ProfilePhoto\">\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id=\"ProfilePhoto\"\n                            disabled={state.isUploading}\n                            onChange={handleChange}\n                        />\n                        <Button\n                            color=\"primary\"\n                            fullWidth\n                            variant=\"text\"\n                            component=\"span\"\n                            disabled={state.isUploading}\n                            startIcon={<CloudUploadIcon />}\n                        >\n                            Update Profile Picture\n                        </Button>\n                    </label>\n                </CardActions>\n            </Box>\n        </Card>\n    );\n};\n\nexport default LeftProfile;"]},"metadata":{},"sourceType":"module"}