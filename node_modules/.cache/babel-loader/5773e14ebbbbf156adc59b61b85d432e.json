{"ast":null,"code":"import axiosInstance from \"./axiosConfig\";\nexport const loginRequest = (Email, Password) => {\n  return axiosInstance.post('/auth/Login', {\n    Email,\n    Password\n  }).then(response => response.data);\n};\nexport const sendResetPasswordLinkRequest = (Email, ResetPasswordUrl) => {\n  return axiosInstance.post('/auth/SendResetPasswordLink', {\n    Email,\n    ResetPasswordUrl\n  }).then(response => response.data);\n};\nexport const resetPasswordRequest = (UserId, NewPassword) => {\n  return axiosInstance.post('/auth/ResetPassword', {\n    UserId,\n    NewPassword\n  }).then(response => response.data);\n};","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/services/Auth.tsx"],"names":["axiosInstance","loginRequest","Email","Password","post","then","response","data","sendResetPasswordLinkRequest","ResetPasswordUrl","resetPasswordRequest","UserId","NewPassword"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,eAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAqC;AAC/D,SAAOH,aAAa,CACjBI,IADI,CACC,aADD,EACgB;AACnBF,IAAAA,KADmB;AAEnBC,IAAAA;AAFmB,GADhB,EAKJE,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IALtB,CAAP;AAMD,CAPM;AASP,OAAO,MAAMC,4BAA4B,GAAG,CAACN,KAAD,EAAgBO,gBAAhB,KAA6C;AACvF,SAAOT,aAAa,CACjBI,IADI,CACC,6BADD,EACgC;AACnCF,IAAAA,KADmC;AAEnCO,IAAAA;AAFmC,GADhC,EAKJJ,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IALtB,CAAP;AAMD,CAPM;AASP,OAAO,MAAMG,oBAAoB,GAAG,CAACC,MAAD,EAAiBC,WAAjB,KAAyC;AAC3E,SAAOZ,aAAa,CACjBI,IADI,CACC,qBADD,EACwB;AAC3BO,IAAAA,MAD2B;AAE3BC,IAAAA;AAF2B,GADxB,EAKJP,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IALtB,CAAP;AAMD,CAPM","sourcesContent":["import axiosInstance from \"./axiosConfig\";\n\nexport const loginRequest = (Email: string, Password: string) => {\n  return axiosInstance\n    .post('/auth/Login', {\n      Email,\n      Password\n    })\n    .then(response => response.data);\n};\n\nexport const sendResetPasswordLinkRequest = (Email: string, ResetPasswordUrl: string) => {\n  return axiosInstance\n    .post('/auth/SendResetPasswordLink', {\n      Email,\n      ResetPasswordUrl\n    })\n    .then(response => response.data);\n};\n\nexport const resetPasswordRequest = (UserId: string, NewPassword: string) => {\n  return axiosInstance\n    .post('/auth/ResetPassword', {\n      UserId,\n      NewPassword\n    })\n    .then(response => response.data);\n};"]},"metadata":{},"sourceType":"module"}