{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fs8-c\\\\OneDrive\\\\Desktop\\\\Cloudegic\\\\projfrontend1\\\\src\\\\layouts\\\\TopBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar, makeStyles } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SessionContext from \"./../context/SessionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const context = useContext(SessionContext);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: clsx(classes.root, className),\n    elevation: 0,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Logo\",\n          src: \"/static/CE_Logo.png\",\n          width: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), context.isAuthenticated && context.user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: notifications.length,\n            color: \"primary\",\n            variant: \"dot\",\n            children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          mdDown: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: () => context.LogoutUser(),\n            children: /*#__PURE__*/_jsxDEV(InputIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          lgUp: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: onMobileNavOpen,\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopBar, \"8xgjComcUdxrDEY0BscXNIgypoM=\", false, function () {\n  return [useStyles];\n});\n\n_c = TopBar;\nexport default TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["C:/Users/fs8-c/OneDrive/Desktop/Cloudegic/projfrontend1/src/layouts/TopBar.tsx"],"names":["React","useState","useContext","Link","clsx","AppBar","Badge","Box","Hidden","IconButton","Toolbar","makeStyles","MenuIcon","NotificationsIcon","InputIcon","SessionContext","useStyles","root","avatar","width","height","TopBar","className","onMobileNavOpen","rest","classes","notifications","context","isAuthenticated","user","length","LogoutUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,UAPF,QAQO,mBARP;AASA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,OAAO;AAClCM,EAAAA,IAAI,EAAE,EAD4B;AAElCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AAF0B,CAAP,CAAD,CAA5B;;AAeA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,eAAb;AAA8B,KAAGC;AAAjC,CAAD,KAAoD;AAAA;;AACjE,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,aAAD,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM0B,OAAO,GAAGzB,UAAU,CAACa,cAAD,CAA1B;AAEA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEX,IAAI,CAACqB,OAAO,CAACR,IAAT,EAAeK,SAAf,CAAvB;AAAkD,IAAA,SAAS,EAAE,CAA7D;AAAA,OAAoEE,IAApE;AAAA,2BACE,QAAC,OAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,MAAT;AAAgB,UAAA,GAAG,EAAC,qBAApB;AAA0C,UAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGG,OAAO,CAACC,eAAR,IAA2BD,OAAO,CAACE,IAAnC,iBACC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,SAAlB;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,YAAY,EAAEH,aAAa,CAACI,MAD9B;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAC,KAHV;AAAA,mCAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAE,MAAMH,OAAO,CAACI,UAAR,EAA3C;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAeE,QAAC,MAAD;AAAQ,UAAA,IAAI,MAAZ;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAER,eAArC;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAtCD;;GAAMF,M;UACYL,S;;;KADZK,M;AAwCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SessionContext from \"./../context/SessionContext\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60,\n  },\n}));\n\ninterface Props {\n  className?: any;\n  onMobileNavOpen?: any;\n  // All other props\n  [key: string]: any;\n}\n\nconst TopBar = ({ className, onMobileNavOpen, ...rest }: Props) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const context = useContext(SessionContext);\n\n  return (\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\n      <Toolbar>\n        <Link to=\"/\">\n          <img alt=\"Logo\" src=\"/static/CE_Logo.png\" width=\"50px\" />\n        </Link>\n        <Box flexGrow={1} />\n        {context.isAuthenticated && context.user && (\n          <>\n            <IconButton color=\"inherit\">\n              <Badge\n                badgeContent={notifications.length}\n                color=\"primary\"\n                variant=\"dot\"\n              >\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <Hidden mdDown>\n              <IconButton color=\"inherit\" onClick={() => context.LogoutUser()}>\n                <InputIcon />\n              </IconButton>\n            </Hidden>\n            <Hidden lgUp>\n              <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n"]},"metadata":{},"sourceType":"module"}